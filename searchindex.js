Search.setIndex({"docnames": ["CONTRIBUTING", "details", "gustaf", "gustaf.create", "gustaf.helpers", "gustaf.io", "gustaf.spline", "gustaf.spline.microstructure", "gustaf.spline.microstructure.tiles", "gustaf.utils", "index", "modules", "show_options"], "filenames": ["CONTRIBUTING.rst", "details.rst", "gustaf.rst", "gustaf.create.rst", "gustaf.helpers.rst", "gustaf.io.rst", "gustaf.spline.rst", "gustaf.spline.microstructure.rst", "gustaf.spline.microstructure.tiles.rst", "gustaf.utils.rst", "index.rst", "modules.rst", "show_options.rst"], "titles": ["Contributing", "Feature details &amp; options", "gustaf", "gustaf.create", "gustaf.helpers", "gustaf.io", "gustaf.spline", "gustaf.spline.microstructure", "gustaf.spline.microstructure.tiles", "gustaf.utils", "gustaf", "gustaf", "Show Options"], "terms": {"gustaf": [0, 12], "welcom": 0, "appreci": 0, "discuss": 0, "issu": 0, "pull": 0, "request": [0, 4, 8], "onc": [0, 2, 4, 10], "repo": 0, "i": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12], "fork": 0, "one": [0, 2, 6, 8, 9], "possibl": [0, 2, 4, 5, 6], "point": [0, 3, 6, 7, 8, 9], "would": [0, 4, 9], "creat": [0, 2, 4, 7, 8, 10, 11, 12], "new": [0, 4, 6], "python": [0, 6, 9, 10], "environ": 0, "exampl": [0, 4, 6, 9, 10], "us": [0, 2, 3, 4, 6, 7, 8, 9, 10, 12], "conda": 0, "3": [0, 2, 3, 4, 6, 8, 9, 10], "9": 0, "n": [0, 2, 4, 6, 9], "gustafenv": 0, "activ": 0, "git": [0, 10], "clone": 0, "github": [0, 2, 4, 9, 10], "com": [0, 2, 4, 9, 10], "path": [0, 5, 12], "your": [0, 5, 6], "cd": 0, "checkout": [0, 10], "b": [0, 9], "feature0": 0, "python3": 0, "setup": 0, "py": [0, 2, 3, 4, 5, 6, 9], "develop": [0, 10], "rais": [0, 4, 5, 9], "instead": [0, 6], "assert": [0, 9, 10], "complex": 0, "comprehens": 0, "fit": [0, 8], "line": [0, 2, 6, 9, 11, 12], "2": [0, 2, 3, 4, 6, 8, 9, 10], "max": [0, 3], "total": [0, 7], "necessari": [0, 4, 8], "first": [0, 6, 8, 10], "letter": 0, "abbrevi": 0, "element": [0, 2, 5, 6, 8, 9, 10, 11, 12], "loop": 0, "kv": 0, "knot_vector": [0, 6, 10], "j": 0, "k": 0, "l": 0, "pure": 0, "index": [0, 4, 9], "enumer": 0, "To": [0, 4, 5, 6, 10], "code": 0, "follow": [0, 2, 3, 5, 6, 9, 10, 12], "command": 0, "pip": [0, 10], "instal": [0, 4], "pre": 0, "commit": 0, "precommit": 0, "run": [0, 4], "look": [0, 2, 3, 6], "intend": [0, 4], "you": [0, 2, 3, 4, 6, 9, 10, 12], "can": [0, 2, 3, 4, 5, 6, 8, 9, 10, 12], "rememb": 0, "spline": [0, 2, 4, 10, 11], "extens": [0, 10], "empti": [0, 12], "don": [0, 4, 10], "t": [0, 2, 3, 4, 9, 10], "have": [0, 4, 6, 9, 12], "splinepi": [0, 2, 4, 6, 10], "avail": [0, 1, 2, 6], "r": [0, 4, 6, 12], "requir": [0, 4, 7, 10], "txt": [0, 4], "sphinx": 0, "apidoc": 0, "f": 0, "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9], "_templat": 0, "o": [0, 2], "html": [0, 12], "now": [0, 2, 9], "open": [0, 6], "browser": 0, "thank": 0, "we": [0, 2, 4, 9, 10], "ci": 0, "test": [0, 6], "pr": 0, "howev": 0, "case": [0, 4, 6, 9], "d": [0, 2, 3, 4, 6, 9], "like": [0, 2, 3, 4, 6, 9, 10], "thi": [0, 2, 3, 4, 5, 6, 9, 10], "here": [0, 2, 4], "ar": [0, 2, 4, 5, 6, 7, 8, 9, 10, 12], "sequenc": [0, 9], "function": [0, 2, 4, 5, 6, 7, 8, 9, 10], "": [0, 2, 3, 4, 6, 10], "root": 0, "gustaf_commit": 0, "rm": 0, "rst": 0, "modul": [0, 4, 5, 6], "pytest": [0, 10], "more": [1, 2, 4, 5, 6, 9, 10, 12], "document": [1, 10], "show": [1, 6, 7, 10, 11], "from_data": [2, 3, 11, 12], "box": [2, 3, 6, 11], "to_simplex": [2, 3, 11], "raster": [2, 3, 11], "helper": [2, 6, 7, 10, 11, 12], "data": [2, 3, 6, 7, 9, 10, 11, 12], "computeddata": [2, 4, 11], "__init__": [2, 4, 6, 7, 8, 9, 11], "depends_on": [2, 4], "computedmeshdata": [2, 4, 11], "datahold": [2, 4, 11], "clear": [2, 4], "get": [2, 4, 6], "item": [2, 4, 6, 12], "kei": [2, 4, 5, 7], "pop": [2, 4], "valu": [2, 3, 4, 6, 8, 9, 10, 12], "splinedata": [2, 4, 6, 11], "as_arrow": [2, 4, 12], "as_scalar": [2, 4], "splinedataadaptor": [2, 4, 10, 11], "arrow_data_onli": [2, 4], "as_vertex_data": [2, 4], "has_evalu": [2, 4], "has_funct": [2, 4], "has_loc": [2, 4], "is_splin": [2, 4, 6, 11], "locat": [2, 4, 5, 6], "trackedarrai": [2, 4, 11], "copi": [2, 4, 5, 6, 11], "mutabl": [2, 4], "view": [2, 4, 6, 10], "unique2dfloat": [2, 4, 11], "id": [2, 4, 9, 10, 12], "intersect": [2, 4], "invers": [2, 4, 8, 9, 10], "unique2dinteg": [2, 4, 9, 11], "count": [2, 3, 4, 10], "vertexdata": [2, 4, 11], "make_tracked_arrai": [2, 4, 11], "option": [2, 5, 6, 7, 9, 10, 11], "allowed_typ": [2, 4], "backend": [2, 4, 6, 10], "descript": [2, 4, 12], "showopt": [2, 4, 6, 11], "copy_valid_opt": [2, 4], "updat": [2, 4, 6], "valid_kei": [2, 4], "make_valid_opt": [2, 4, 11], "raise_if": [2, 11, 12], "moduleimportrais": [2, 4, 11, 12], "invalid_inherited_attr": [2, 4, 11], "io": [2, 11], "default": [2, 3, 4, 6, 9, 11, 12], "load": [2, 4, 5, 6, 11], "ioutil": [2, 11], "abs_fnam": [2, 5, 11], "check_and_makedir": [2, 5, 11], "meshio": [2, 10, 11], "export": [2, 5, 11], "mfem": [2, 11], "mixd": [2, 11], "make_mrng": [2, 5, 11], "nutil": [2, 11], "to_nutils_simplex": [2, 5, 11], "microstructur": [2, 6, 11], "tile": [2, 6, 7, 11], "crosstile2d": [2, 6, 7], "crosstile3d": [2, 6, 7], "inversecrosstile3d": [2, 6, 7], "tilebas": [2, 6, 7], "base": [2, 4, 5, 7, 8, 9, 11, 12], "bspline": [2, 6, 10, 11], "extract": [2, 3, 10, 11], "proxim": [2, 11], "nurb": [2, 6, 10, 11], "bezier": [2, 6, 10, 11], "rationalbezi": [2, 6, 11], "gustafsplin": [2, 6, 11], "show_opt": [2, 4, 6, 10, 11], "showabl": [2, 4, 6, 11], "spline_data": [2, 6, 10], "from_mfem": [2, 6, 11], "load_splin": [2, 6, 11], "creator": [2, 6, 10, 11], "extrud": [2, 6, 10, 11], "parametric_view": [2, 6, 10, 11], "revolv": [2, 6, 10, 11], "arc": [2, 6, 11], "circl": [2, 6, 11], "cone": [2, 6, 11], "disk": [2, 6, 11], "from_bound": [2, 6, 11], "plate": [2, 6, 11], "pyramid": [2, 6, 11], "sphere": [2, 6, 11], "toru": [2, 6, 11], "extractor": [2, 6, 10, 11], "boundari": [2, 5, 6, 8, 10], "control_edg": [2, 6, 11], "control_fac": [2, 6, 11], "control_mesh": [2, 6, 11], "control_point": [2, 6, 10, 11], "control_volum": [2, 6, 11], "ffd": [2, 11], "elevate_degre": [2, 6], "insert_knot": [2, 6], "mesh": [2, 3, 4, 5, 6, 9, 10], "reduce_degre": [2, 6], "remove_knot": [2, 6], "closest_control_point": [2, 6, 11], "closest_parametric_coordin": [2, 6, 11], "visual": [2, 10, 11], "splineshowopt": [2, 6, 11], "make_show": [2, 6, 11], "util": [2, 5, 11], "arr": [2, 11], "bound": [2, 3, 6, 9, 11], "bounds_diagon": [2, 9, 11], "bounds_mean": [2, 9, 11], "bounds_norm": [2, 9, 11], "close_row": [2, 9, 11], "enforce_len": [2, 9, 11], "is_one_of_shap": [2, 9, 11], "is_shap": [2, 9, 11], "make_c_contigu": [2, 9, 11], "rotat": [2, 6, 9, 11], "rotation_matrix": [2, 9, 11], "rotation_matrix_around_axi": [2, 9, 11], "select_with_rang": [2, 9, 11], "unique_row": [2, 9, 11], "connec": [2, 11], "faces_to_edg": [2, 9, 11], "hexa_to_quad": [2, 9, 11], "make_hexa_volum": [2, 9, 11], "make_quad_fac": [2, 9, 11], "range_to_edg": [2, 9, 11], "sequence_to_edg": [2, 9, 11], "sorted_uniqu": [2, 9, 11], "subdivide_edg": [2, 9, 11], "subdivide_quad": [2, 9, 11], "subdivide_tri": [2, 9, 11], "tet_to_tri": [2, 9, 11], "volumes_to_fac": [2, 9, 11], "log": [2, 11], "configur": [2, 6, 9, 11, 12], "debug": [2, 9, 11], "info": [2, 4, 5, 6, 9, 10, 11], "prepended_log": [2, 9, 11], "warn": [2, 9, 11], "tictoc": [2, 11], "tic": [2, 9, 11], "summari": [2, 9], "toc": [2, 9], "also": [2, 3], "known": 2, "class": [2, 3, 4, 6, 7, 8, 9, 10], "none": [2, 3, 4, 5, 6, 7, 8, 9], "true": [2, 3, 4, 5, 6, 7, 9, 10, 12], "It": [2, 3], "ha": [2, 4, 6, 10], "paramet": [2, 3, 4, 5, 6, 7, 8, 9], "np": [2, 3, 4, 5, 6, 8, 9, 10], "ndarrai": [2, 4, 5, 6, 8, 9, 12], "center": [2, 6, 8, 9, 11, 12], "return": [2, 3, 4, 5, 6, 7, 8, 9, 10], "type": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12], "n_element": 2, "properti": [2, 4, 6, 7, 8, 10], "const_edg": [2, 11], "non": [2, 6], "writeabl": [2, 4], "version": [2, 4, 10], "const_el": [2, 11], "non_mutable_el": 2, "dash": [2, 11], "space": [2, 5, 6, 8], "turn": [2, 3, 4, 9], "given": [2, 3, 4, 5, 6, 9], "try": [2, 5], "chop": 2, "close": [2, 4, 6, 7, 8, 9], "pattern": 2, "should": [2, 4, 6, 9, 12], "length": [2, 4, 6, 12], "float": [2, 3, 4, 6, 8, 9, 12], "self": [2, 6], "bounds_diagonal_norm": [2, 11], "50": [2, 10], "dashing_edg": 2, "If": [2, 3, 4, 5, 6, 7, 9, 12], "its": [2, 3, 4, 6, 9, 10], "origin": [2, 3, 4, 5, 6], "current": [2, 4, 5, 6, 8, 9, 10], "connect": [2, 5, 9, 10], "A": [2, 4, 5, 6], "short": 2, "cut": 2, "fe": 2, "friendli": 2, "term": 2, "mean": [2, 8, 9], "differ": [2, 5], "thing": 2, "int": [2, 3, 6, 7, 8, 9, 12], "iff": [2, 6, 7, 9], "kind": [2, 4, 11], "referenced_vertic": [2, 11], "mask": 2, "referenc": 2, "remove_unreferenced_vertic": [2, 11], "remov": 2, "unreferenc": 2, "adapt": [2, 4, 6, 9], "from": [2, 3, 4, 5, 6, 9, 10], "mikedh": [2, 4], "trimesh": [2, 4], "new_self": 2, "shrink": [2, 11], "ratio": [2, 12], "0": [2, 3, 4, 5, 6, 8, 9, 10, 12], "8": [2, 9, 10], "map_vertex_data": 2, "shrunk": 2, "bool": [2, 3, 4, 5, 6, 7, 9, 12], "map": [2, 6], "all": [2, 4, 5, 6, 10], "vertex_data": [2, 3, 4, 10, 11, 12], "s_element": 2, "single_edg": [2, 10, 11], "indic": [2, 6, 9], "veri": 2, "uniqu": [2, 4, 9, 10], "appear": [2, 10], "onli": [2, 4, 5, 6, 7, 8, 10], "For": [2, 4, 5, 6, 9, 10, 12], "well": [2, 6, 10], "construct": [2, 6, 7, 8], "consid": [2, 3, 9, 12], "outlin": [2, 6], "m": [2, 4, 6, 9], "sorted_edg": [2, 11], "sort": [2, 9], "along": [2, 6, 9], "axi": [2, 6, 9, 10], "1": [2, 3, 4, 6, 8, 9, 10, 12], "edges_sort": 2, "n_edg": 2, "to_vertic": [2, 11], "obj": [2, 6], "unique_edg": [2, 11], "name": [2, 3, 4, 5, 9, 12], "tupl": [2, 4, 6, 8, 9, 12], "includ": [2, 4], "each": [2, 3, 4, 6, 9, 10], "unique_info": [2, 9], "valid": [2, 4, 6, 9, 12], "attribut": [2, 5, 6, 7], "update_edg": [2, 11], "arg": [2, 4, 6, 10], "kwarg": [2, 4, 6, 7, 8, 12], "alia": 2, "update_el": [2, 11], "similar": [2, 4, 9], "update_vertic": [2, 11], "whatami": [2, 11], "str": [2, 3, 4, 5, 6, 8, 9, 12], "edgesshowopt": [2, 11], "helpe": [2, 4, 6], "bc": [2, 5, 11], "could": 2, "triangl": [2, 3, 5, 9, 10], "quadrilater": [2, 5, 10], "4": [2, 6, 9, 10], "const_fac": [2, 11], "aren": 2, "main": [2, 4, 9, 10], "so": [2, 6], "need": [2, 4, 5, 6, 7, 8], "comput": [2, 4, 6, 9], "single_fac": [2, 10, 11], "surfac": [2, 6, 7, 8], "sorted_fac": [2, 11], "shape": [2, 6, 9], "to_edg": [2, 10, 11], "take": [2, 6, 9, 12], "unique_fac": [2, 10, 11], "namedtupl": [2, 4, 10], "update_fac": [2, 11], "determin": 2, "classmethod": [2, 4], "whatarey": [2, 11], "face_obj": 2, "tell": 2, "tri": [2, 3, 4, 5, 9], "quad": [2, 3, 9], "invalid": 2, "facesshowopt": [2, 11], "mesh_mak": 2, "triangul": 2, "tetrahedr": 2, "input": [2, 3, 4, 5], "form": [2, 4, 6], "tetgenpi": 2, "global": 2, "variabl": [2, 6, 7], "constant": 2, "throughout": 2, "everyth": 2, "relat": [2, 6], "interpolate_vedo_dictcam": [2, 11], "camera": 2, "resolut": [2, 3, 4, 6, 9, 10], "spline_degre": 2, "interpol": 2, "between": [2, 3], "vedo": [2, 4, 6, 7, 10], "dict": [2, 4, 5, 6, 7, 9, 12], "list": [2, 4, 6, 7, 8, 9, 10, 12], "than": [2, 4, 6], "two": [2, 4], "entri": [2, 8, 9], "interpolated_cam": 2, "sinc": [2, 4, 9], "doe": [2, 4, 5, 6], "nativ": 2, "support": [2, 4, 5, 6, 7, 10], "librari": [2, 9], "visualiz": 2, "object": [2, 3, 4, 6, 7, 8, 9, 12], "fast": 2, "offer": 2, "lot": [2, 5], "featur": [2, 10], "compat": 2, "old": 2, "opengl": 2, "matplotlib": 2, "slow": 2, "vector": [2, 4, 6, 9, 10], "graphic": 2, "visualization_backend": 2, "showable_obj": 2, "gus_obj": [2, 3], "appropri": 2, "show_vedo": [2, 11], "wrapper": [2, 3, 4, 6, 9], "repres": [2, 7], "section": [2, 6], "window": [2, 6], "In": [2, 6, 7, 9], "other": [2, 3, 4], "word": 2, "len": [2, 3, 9, 10], "where": [2, 3, 4, 6], "correspond": [2, 4, 12], "union": [2, 5], "gustaf_obj": [2, 7], "vedo_obj": 2, "ani": [2, 4, 6], "geometri": [2, 6, 7, 10], "gustafbas": [2, 4, 6, 7, 8, 9], "fals": [2, 3, 4, 5, 6, 7, 9, 10], "setter": [2, 6], "call": [2, 4, 6, 9], "avoid": [2, 4, 5, 10], "aabb": 2, "diagon": [2, 3, 9], "same": [2, 4, 5, 6, 10, 12], "norm": [2, 4, 9, 10], "concat": [2, 11], "instanc": 2, "sequenti": [2, 9], "put": 2, "them": [2, 3, 4, 9, 10], "togeth": [2, 10], "make": [2, 4, 6, 9], "cl": 2, "allow": [2, 6, 12], "iter": [2, 4, 9], "one_inst": 2, "const_vertic": [2, 11], "inspir": 2, "c": [2, 6, 9, 12], "cpp": 2, "session": 2, "deepcopi": 2, "self_copi": 2, "vertex": [2, 3, 4, 5], "merge_vertic": [2, 11], "toler": [2, 6, 9], "merg": 2, "mergeabl": 2, "merged_self": 2, "remove_vertic": [2, 11], "select_vertic": [2, 11], "rang": [2, 6, 9, 10, 12], "insid": 2, "arrai": [2, 3, 4, 5, 6, 8, 9, 12], "setter_copi": [2, 11], "switch": [2, 6], "c_contigu": 2, "dtype": [2, 4, 9], "_dtype": 2, "probabl": [2, 4], "being": [2, 6], "cast": [2, 3], "manag": [2, 4, 6], "behav": [2, 4], "deriv": [2, 3, 4, 10], "suitabl": [2, 9], "unique_vertic": [2, 4, 11], "hold": [2, 4, 10], "enough": [2, 4], "within": [2, 8, 9], "recomput": 2, "applic": [2, 4, 6, 12], "keyword": [2, 6, 12], "argument": [2, 6], "forc": [2, 4], "re": 2, "unique_vertices_info": 2, "keep": [2, 4], "accordingli": [2, 4], "too": [2, 9], "updated_self": 2, "store": [2, 4], "associ": 2, "vis_dict": [2, 11], "temporari": 2, "backward": 2, "what": [2, 6], "am": 2, "answer": [2, 4], "deep": 2, "philosoph": 2, "question": 2, "verticesshowopt": [2, 11], "tetrahedron": [2, 5, 9, 10], "hexahedron": [2, 3, 5, 9, 10], "const_volum": [2, 11], "sorted_volum": [2, 11], "volumes_sort": 2, "to_fac": [2, 10, 11], "unique_volum": [2, 11], "update_volum": [2, 11], "volume_obj": 2, "overwrit": [2, 6], "tet": [2, 9, 10], "hexa": 2, "volumesshowopt": [2, 11], "routin": [3, 4], "scale": [3, 6, 12], "data_norm": 3, "either": [3, 7, 8, 9, 12], "multi": [3, 4, 5, 10], "dim": [3, 6, 7, 8], "describ": [3, 4, 6, 7, 8, 9, 12], "belong": 3, "number": [3, 4, 5, 6, 7, 8, 9], "end": 3, "scheme": [3, 9], "array_data": 3, "By": [3, 9], "aabb_diagonal_norm": 3, "max_data_norm": 3, "dimens": [3, 5, 6, 7, 8, 9, 10], "mismatch": 3, "append": 3, "zero": [3, 6], "pad": 3, "gu": [3, 10, 12], "n_vertic": 3, "data_nam": [3, 10, 12], "search": [3, 9], "save": [3, 4, 5], "absolut": 3, "max_norm": 3, "els": [3, 4, 6, 9], "doesn": [3, 4], "enforc": 3, "match": [3, 8, 9], "data_arrow": 3, "simplex": [3, 5], "backslash": 3, "structur": [3, 4, 9], "quadrangl": 3, "block": [3, 7], "minimum": [3, 6, 8, 12], "maximum": [3, 8, 12], "coordin": [3, 7, 8, 10], "boolean": 3, "triangular": 3, "face_mesh": 3, "counterclockwis": 3, "ccw": 3, "vice": 3, "versa": 3, "Will": [3, 6, 7], "resembl": 3, "slash": 3, "want": [3, 4, 10, 12], "wai": [3, 4], "set": [3, 4, 6, 7, 9, 10, 11, 12], "represent": [3, 4, 6, 7], "which": [3, 4, 5], "convert": [3, 5], "cubic": 3, "simplexifi": 3, "simpl": [3, 5, 8], "mgrid": 3, "desir": [3, 6, 9], "raster_vertic": 3, "volume_mesh": 3, "help": 4, "some": [4, 10], "last": 4, "expect": [4, 5, 12], "var_nam": 4, "make_properti": 4, "decor": 4, "check": [4, 5, 6, 9, 10], "ye": 4, "modif": 4, "depend": 4, "eras": 4, "subclass": 4, "own": 4, "holder": 4, "most": 4, "sens": 4, "reassign": 4, "default_valu": 4, "exist": [4, 5, 6], "alwai": [4, 6, 9], "initi": [4, 6, 12], "dict_valu": 4, "dict_kei": 4, "appli": [4, 6, 9], "arrow": [4, 12], "certain": 4, "place": [4, 12], "predefin": 4, "scalar": [4, 10], "prepar": 4, "present": 4, "both": [4, 6, 9, 10], "color": [4, 12], "respect": 4, "taken": 4, "nice": 4, "implement": [4, 5, 6], "see": [4, 5, 6, 9, 12], "licens": 4, "http": [4, 5, 10, 12], "blob": [4, 9], "cach": 4, "minor": 4, "hash": 4, "inplac": 4, "modifi": [4, 6], "flag": 4, "oper": [4, 6, 9], "potenti": [4, 6], "caus": 4, "un": 4, "trackabl": 4, "behavior": 4, "note": [4, 6, 9], "realli": 4, "chang": [4, 6], "track": 4, "without": [4, 6], "give": [4, 6], "inform": [4, 5, 6, 9, 10], "might": 4, "better": 4, "long": [4, 9], "thei": [4, 6, 10], "2d": [4, 5, 9, 10, 12], "dot": 4, "separ": [4, 6, 10], "syntax": 4, "access": 4, "field": 4, "overlap": [4, 9, 10], "itself": 4, "integ": [4, 6, 7], "approach": 4, "minim": [4, 6, 10], "size": [4, 9, 12], "transform": [4, 9, 10], "__setitem__": 4, "__getitem__": 4, "perform": [4, 6, 9], "whatev": 4, "cmap": [4, 6, 12], "vertic": [4, 5, 6, 9, 10, 11, 12], "attr": 4, "beforehand": 4, "raise_": 4, "an": [4, 6, 8, 9, 12], "alreadi": 4, "linalg": 4, "data_as_scalar": 4, "properli": [4, 6], "numpi": [4, 6, 9, 10, 12], "pitfal": 4, "contigu": [4, 9], "factori": 4, "contain": [4, 6], "organ": 4, "mainli": 4, "replac": 4, "nest": 4, "accept": [4, 9, 12], "defin": [4, 5, 6, 7, 8, 10], "up": 4, "specif": [4, 9, 12], "common": 4, "showmanag": 4, "copy_to": 4, "simpli": 4, "specifi": [4, 5, 9], "stir": 4, "regist": 4, "dict_item": 4, "directli": [4, 6, 10], "select": [4, 9], "dure": [4, 12], "valid_opt": 4, "collect": 4, "error": 4, "lib_nam": 4, "error_messag": 4, "mock": 4, "import": [4, 5, 10], "handl": 4, "packag": [4, 6], "due": 4, "part": [4, 6], "attr_nam": 4, "qualnam": 4, "property_": 4, "attributeerror": 4, "level": 4, "func": 4, "_description_": 4, "raiser": 4, "correctli": 4, "fname": [5, 6], "edg": [5, 6, 9, 10, 11, 12], "face": [5, 6, 8, 9, 10, 11, 12], "volum": [5, 6, 9, 10, 11], "file": 5, "format": 5, "guess": 5, "correct": [5, 6], "pathlib": 5, "mesh_typ": [5, 6], "lord": 5, "hi": 5, "expertis": 5, "ab": 5, "tild": 5, "safe": 5, "mayb": 5, "directori": 5, "makedir": 5, "happen": 5, "after": 5, "notimplementederror": 5, "method": [5, 6, 10], "cannot": 5, "process": [5, 10], "less": [5, 6], "direct": [5, 6], "gustav": [5, 6], "lost": 5, "when": [5, 8], "patch": [5, 10], "definit": 5, "ad": [5, 9], "revisit": 5, "extend": [5, 6], "linear": [5, 6, 8, 10], "straight": 5, "detail": [5, 10], "org": 5, "v1": 5, "space_tim": 5, "semi": 5, "discret": [5, 6], "flat": 5, "time": [5, 9, 10], "output": 5, "slab": 5, "discontinu": 5, "mxyz": 5, "mien": 5, "mrng": 5, "read": 5, "minf": 5, "crucial": 5, "param": 5, "assum": [5, 9], "3d": [5, 9], "xn": 5, "postfix": 5, "ex": 5, "build": [5, 6, 7], "particip": 5, "The": [5, 6, 10], "savez": 5, "npz": 5, "node": [5, 9], "cnode": 5, "coord": [5, 10], "tag": 5, "btag": 5, "ptag": 5, "gustaf_mesh": 5, "dictionari": [5, 6], "interpret": [5, 9], "work": [5, 9], "dic_to_nutil": 5, "deformation_funct": [6, 7], "microtil": [6, 7, 8], "parametrization_funct": [6, 7], "inherit": [6, 10], "degre": [6, 9, 10], "para_dim": 6, "parametr": [6, 7, 8, 10], "same_bsplin": 6, "same_nurb": 6, "ration": [6, 10], "constructor": 6, "abstractmethod": 6, "sure": 6, "duplic": [6, 10], "overrid": 6, "geometr": 6, "prism": 6, "spline_fac": 6, "spline_extractor": 6, "queri": 6, "closest_cp_id": 6, "distanc": 6, "return_dist": 6, "spline_proxim": 6, "equival": 6, "return_show": 6, "weight": [6, 10], "nurbs_dict": 6, "reorgan": 6, "control": [6, 8, 12], "gussplin": 6, "variou": 6, "excess": 6, "adjust": 6, "knot": 6, "fitting_queri": 6, "return_discret": 6, "parametric_spac": 6, "relev": 6, "black": 6, "curv": 6, "green": 6, "alpha": [6, 12], "light": [6, 12], "control_point_id": 6, "color_splin": 6, "things_to_show": 6, "spl": 6, "my_splin": 6, "radiu": [6, 8, 9, 12], "angl": [6, 9, 10], "90": 6, "n_knot_span": 6, "start_angl": 6, "li": 6, "x": [6, 7, 9], "y": [6, 7, 9], "plane": 6, "around": [6, 9], "z": [6, 7, 8, 9], "span": 6, "start": [6, 9], "nd": 6, "hyper": 6, "rectangl": 6, "nd_box": 6, "n_knots_span": 6, "outer_radiu": 6, "height": [6, 8], "inner_radiu": 6, "volumetr": 6, "360": 6, "circular": 6, "whether": 6, "solid": 6, "model": 6, "hollow": 6, "quadrat": [6, 8], "thick": [6, 8], "outer": [6, 7], "inner": [6, 8], "complet": 6, "revolut": 6, "extrusion_vector": [6, 10], "parametric_bound": 6, "physical_bound": 6, "physic": [6, 8, 10], "equal": [6, 9], "greater": 6, "provid": [6, 7, 8], "npoint": 6, "ndim": 6, "ax": [6, 12], "previous": 6, "naive_splin": 6, "multipl": [6, 9], "preserv": 6, "shallow": 6, "underli": 6, "para_splin": 6, "biquadrat": 6, "width": [6, 12], "everi": 6, "basi": 6, "result": 6, "radiant": [6, 9], "torus_radiu": 6, "section_outer_radiu": 6, "section_inner_radiu": 6, "torus_angl": 6, "section_angl": 6, "section_n_knot_span": 6, "torus_n_knot_span": 6, "cross": 6, "yield": 6, "tube": 6, "intern": [6, 8, 10], "splitting_plan": 6, "interv": 6, "split": 6, "subsect": 6, "domain": [6, 8], "pass": [6, 7, 12], "achiev": 6, "do": [6, 9], "cps_as_vertic": 6, "100": [6, 10], "extract_dim": 6, "extract_knot": 6, "all_knot": 6, "entiti": 6, "limit": 6, "higher": [6, 8], "split_plan": 6, "sub": 6, "ted": 6, "freeform": 6, "deform": [6, 7], "previou": 6, "jaewook": 6, "lee": 6, "free": 6, "our": 6, "via": 6, "_type": 6, "const": 6, "spline_typ": 6, "unit": [6, 7, 12], "hypercub": 6, "whole": 6, "obtain": 6, "latest": [6, 10], "retriev": 6, "pleas": 6, "even": [6, 9], "though": 6, "ensur": 6, "least": [6, 12], "befor": [6, 9], "partial": 6, "plan": 6, "localffd": 6, "_spline": 6, "_mesh": 6, "unscal": 6, "_q_vertic": 6, "parametric_dimens": 6, "accord": 6, "1e": 6, "08": 6, "titl": [6, 9, 12], "arbitrari": 6, "These": 6, "onto": 6, "awar": 6, "plotter": [6, 7], "state": 6, "redirect": 6, "explicitli": 6, "candid": 6, "is_mesh": 6, "sline": 6, "closest": 6, "query_point": 6, "nearest_onli": 6, "find": [6, 9, 10], "pair": 6, "closing_til": [7, 8], "create_til": [7, 8], "evaluation_point": [7, 8], "parameter_space_dimens": [7, 8], "facilitata": 7, "contour": 7, "per": [7, 8, 9], "cube": 7, "callabl": 7, "closing_fac": 7, "knot_span_wis": 7, "string": 7, "must": [7, 8, 12], "insert": 7, "knotspan": 7, "v": 7, "paradim": 7, "finish": 7, "order": [7, 8], "said": 7, "coupl": 7, "evalu": [7, 8], "dimension": [7, 8], "design": 7, "descib": 7, "local": 7, "use_sav": 7, "return_gustaf": 7, "consist": [7, 9], "plt": 7, "crosstil": 8, "branch": 8, "trilinear": 8, "closur": 8, "boundary_width": 8, "filling_height": 8, "5": [8, 9, 10], "radii": 8, "cylind": 8, "positiv": 8, "That": 8, "e": [8, 12], "surrond": 8, "portion": 8, "fill": 8, "list_of_splin": 8, "center_expans": 8, "outward": 8, "expand": 8, "factor": [8, 12], "microtile_list": 8, "z_min": 8, "z_max": 8, "seperator_dist": 8, "posit": 8, "init": 8, "prior": 8, "composit": 8, "6": [8, 9, 10], "sound": 9, "funni": 9, "kdtree": 9, "scipi": [9, 10], "spatial": 9, "ckdtree": 9, "unique_arrai": 9, "unique_id": 9, "neighbor": 9, "n_len": 9, "repeat": 9, "len_n_arrai": 9, "strict": [9, 10], "neg": 9, "valueerror": 9, "just": [9, 10], "c_contiguous_arrai": 9, "rotation_axi": 9, "rotated_point": 9, "matrix": 9, "virtual": 9, "amount": 9, "radian": 9, "rodrigu": 9, "formula": 9, "column": 9, "pars": 9, "greater_than": 9, "less_than": 9, "in_arr": 9, "return_index": 9, "return_invers": 9, "return_count": 9, "dtype_nam": 9, "row": 9, "trick": 9, "skimag": 9, "url": 9, "scikit": 9, "imag": [9, 12], "unique_arr": 9, "p": 9, "q": 9, "unique_ind": 9, "w": 9, "unique_inv": 9, "becaus": 9, "been": 9, "cooler": 9, "wa": 9, "palindrom": 9, "ref": 9, "node_ind": 9, "edge_ind": 9, "____": 9, "matter": 9, "reorder": 9, "7": [9, 10], "face_ind": 9, "counter": 9, "clock": 9, "wise": [9, 10], "range_": 9, "continu": 9, "open_loop_index_train": 9, "seq": 9, "sorted_": 9, "subdivid": 9, "mid": [9, 12], "newli": 9, "node_id": 9, "edge_id": 9, "subdivided_edg": 9, "return_dict": 9, "new_vertic": 9, "subdivided_fac": 9, "mesh_dict": 9, "divid": 9, "_": 9, "guidanc": 9, "thin": 9, "logfil": 9, "logger": 9, "messag": 9, "log_func": 9, "prepend": 9, "timer": 9, "untitl": 9, "log_level": 9, "easier": 9, "measur": 9, "mark": 9, "perf_count": 9, "benchmark": 9, "print_": 9, "print": [9, 10], "record": 9, "lap": 9, "cumul": 9, "add": [9, 12], "assign": 9, "laps": 9, "numer": 10, "analysi": 10, "especi": 10, "finit": 10, "fem": 10, "isogemetr": 10, "iga": 10, "singl": 10, "tataratat": 10, "how": 10, "subel": 10, "as_fac": 10, "as_edg": 10, "subsubel": 10, "face_connect": 10, "edge_connect": 10, "allclos": 10, "ones": 10, "gener": 10, "about": 10, "unique_face_info": 10, "shortcut": 10, "single_volum": 10, "let": 10, "arang": 10, "random": 10, "arrow_data": [10, 12], "disc": 10, "equip": 10, "addit": 10, "59493748": 10, "29746874": 10, "47715876": 10, "87881711": 10, "23857938": 10, "43940856": 10, "04568248": 10, "16269674": 10, "02284124": 10, "58134837": 10, "54463904": 10, "83867057": 10, "27231952": 10, "41933528": 10, "85940641": 10, "sampl": 10, "abl": 10, "nurbs_as_fac": 10, "bezier_patch": 10, "subsplin": 10, "70": 10, "plot": [10, 12], "subplot": 10, "translat": 10, "bit": 10, "out": 10, "contiribut": 10, "api": 10, "refer": 10, "meshmak": 11, "segment": 11, "rgb": 12, "hex": 12, "transpar": 12, "vertex_id": 12, "element_id": 12, "metal": 12, "plastic": 12, "shini": 12, "glossi": 12, "ambient": 12, "off": 12, "colormap": 12, "vmin": 12, "vmax": 12, "cmap_alpha": 12, "scalarbar": 12, "At": 12, "po": 12, "title_yoffset": 12, "font_siz": 12, "nlabel": 12, "horizont": 12, "use_alpha": 12, "label_format": 12, "over": 12, "arrow_data_scal": 12, "arrow_data_color": 12, "full": 12, "embl": 12, "autodoc": 12, "content": 12, "addon": 12, "pixel": 12, "label": 12, "label_opt": 12, "xrot": 12, "yrot": 12, "zrot": 12, "precis": 12, "ital": 12, "font": 12, "justifi": 12, "As": 12, "further": 12, "hint": 12, "join": 12, "combin": 12, "right": 12, "left": 12, "top": 12, "bottom": 12, "lw": 12, "head_radiu": 12, "head": 12, "head_length": 12, "shaft_radiu": 12, "shaft": 12, "lc": 12, "textur": 12, "pictur": 12, "vtk": 12, "vtktextur": 12, "0x7f5572367670": 12, "0x7f5572477be0": 12}, "objects": {"gustaf.create": [[3, 0, 0, "-", "edges"], [3, 0, 0, "-", "faces"], [3, 0, 0, "-", "vertices"], [3, 0, 0, "-", "volumes"]], "gustaf.create.edges": [[3, 1, 1, "", "from_data"]], "gustaf.create.faces": [[3, 1, 1, "", "box"], [3, 1, 1, "", "to_simplex"]], "gustaf.create.vertices": [[3, 1, 1, "", "raster"]], "gustaf.create.volumes": [[3, 1, 1, "", "box"]], "gustaf": [[2, 0, 0, "-", "edges"], [2, 0, 0, "-", "faces"], [2, 0, 0, "-", "meshmaker"], [2, 0, 0, "-", "segment"], [2, 0, 0, "-", "settings"], [2, 0, 0, "-", "show"], [2, 0, 0, "-", "vertices"], [2, 0, 0, "-", "volumes"]], "gustaf.edges": [[2, 2, 1, "", "Edges"], [2, 2, 1, "", "EdgesShowOption"]], "gustaf.edges.Edges": [[2, 3, 1, "", "__init__"], [2, 3, 1, "", "centers"], [2, 4, 1, "", "const_edges"], [2, 4, 1, "", "const_elements"], [2, 3, 1, "", "dashed"], [2, 4, 1, "", "edges"], [2, 4, 1, "", "elements"], [2, 5, 1, "", "kind"], [2, 3, 1, "", "referenced_vertices"], [2, 3, 1, "", "remove_unreferenced_vertices"], [2, 3, 1, "", "shrink"], [2, 3, 1, "", "single_edges"], [2, 3, 1, "", "sorted_edges"], [2, 3, 1, "", "to_vertices"], [2, 3, 1, "", "unique_edges"], [2, 3, 1, "", "update_edges"], [2, 3, 1, "", "update_elements"], [2, 4, 1, "", "whatami"]], "gustaf.faces": [[2, 2, 1, "", "Faces"], [2, 2, 1, "", "FacesShowOption"]], "gustaf.faces.Faces": [[2, 5, 1, "", "BC"], [2, 3, 1, "", "__init__"], [2, 4, 1, "", "const_edges"], [2, 4, 1, "", "const_faces"], [2, 3, 1, "", "dashed"], [2, 3, 1, "", "edges"], [2, 4, 1, "", "faces"], [2, 5, 1, "", "kind"], [2, 3, 1, "", "single_faces"], [2, 3, 1, "", "sorted_faces"], [2, 3, 1, "", "to_edges"], [2, 3, 1, "", "unique_faces"], [2, 3, 1, "", "update_edges"], [2, 3, 1, "", "update_faces"], [2, 4, 1, "", "whatami"], [2, 3, 1, "", "whatareyou"]], "gustaf.helpers": [[4, 0, 0, "-", "data"], [4, 0, 0, "-", "options"], [4, 0, 0, "-", "raise_if"]], "gustaf.helpers.data": [[4, 2, 1, "", "ComputedData"], [4, 2, 1, "", "ComputedMeshData"], [4, 2, 1, "", "DataHolder"], [4, 2, 1, "", "SplineData"], [4, 2, 1, "", "SplineDataAdaptor"], [4, 2, 1, "", "TrackedArray"], [4, 2, 1, "", "Unique2DFloats"], [4, 2, 1, "", "Unique2DIntegers"], [4, 2, 1, "", "VertexData"], [4, 1, 1, "", "make_tracked_array"]], "gustaf.helpers.data.ComputedData": [[4, 3, 1, "", "__init__"], [4, 3, 1, "", "depends_on"]], "gustaf.helpers.data.DataHolder": [[4, 3, 1, "", "__init__"], [4, 3, 1, "", "clear"], [4, 3, 1, "", "get"], [4, 3, 1, "", "items"], [4, 3, 1, "", "keys"], [4, 3, 1, "", "pop"], [4, 3, 1, "", "values"]], "gustaf.helpers.data.SplineData": [[4, 3, 1, "", "__init__"], [4, 3, 1, "", "as_arrow"], [4, 3, 1, "", "as_scalar"]], "gustaf.helpers.data.SplineDataAdaptor": [[4, 3, 1, "", "__init__"], [4, 5, 1, "", "arrow_data_only"], [4, 3, 1, "", "as_vertex_data"], [4, 5, 1, "", "data"], [4, 5, 1, "", "function"], [4, 5, 1, "", "has_evaluate"], [4, 5, 1, "", "has_function"], [4, 5, 1, "", "has_locations"], [4, 5, 1, "", "is_spline"], [4, 5, 1, "", "locations"]], "gustaf.helpers.data.TrackedArray": [[4, 3, 1, "", "copy"], [4, 4, 1, "", "mutable"], [4, 3, 1, "", "view"]], "gustaf.helpers.data.Unique2DFloats": [[4, 5, 1, "", "ids"], [4, 5, 1, "", "intersection"], [4, 5, 1, "", "inverse"], [4, 5, 1, "", "values"]], "gustaf.helpers.data.Unique2DIntegers": [[4, 5, 1, "", "counts"], [4, 5, 1, "", "ids"], [4, 5, 1, "", "inverse"], [4, 5, 1, "", "values"]], "gustaf.helpers.data.VertexData": [[4, 3, 1, "", "__init__"], [4, 3, 1, "", "as_arrow"], [4, 3, 1, "", "as_scalar"]], "gustaf.helpers.options": [[4, 2, 1, "", "Option"], [4, 2, 1, "", "ShowOption"], [4, 1, 1, "", "make_valid_options"]], "gustaf.helpers.options.Option": [[4, 3, 1, "", "__init__"], [4, 5, 1, "", "allowed_types"], [4, 5, 1, "", "backend"], [4, 5, 1, "", "description"], [4, 5, 1, "", "key"]], "gustaf.helpers.options.ShowOption": [[4, 3, 1, "", "__init__"], [4, 3, 1, "", "clear"], [4, 3, 1, "", "copy_valid_options"], [4, 3, 1, "", "get"], [4, 3, 1, "", "items"], [4, 3, 1, "", "keys"], [4, 3, 1, "", "pop"], [4, 3, 1, "", "update"], [4, 3, 1, "", "valid_keys"], [4, 3, 1, "", "values"]], "gustaf.helpers.raise_if": [[4, 2, 1, "", "ModuleImportRaiser"], [4, 1, 1, "", "invalid_inherited_attr"]], "gustaf.helpers.raise_if.ModuleImportRaiser": [[4, 3, 1, "", "__init__"]], "gustaf.io": [[5, 0, 0, "-", "default"], [5, 0, 0, "-", "ioutils"], [5, 0, 0, "-", "meshio"], [5, 0, 0, "-", "mfem"], [5, 0, 0, "-", "mixd"], [5, 0, 0, "-", "nutils"]], "gustaf.io.default": [[5, 1, 1, "", "load"]], "gustaf.io.ioutils": [[5, 1, 1, "", "abs_fname"], [5, 1, 1, "", "check_and_makedirs"]], "gustaf.io.meshio": [[5, 1, 1, "", "export"], [5, 1, 1, "", "load"]], "gustaf.io.mfem": [[5, 1, 1, "", "export"], [5, 1, 1, "", "load"]], "gustaf.io.mixd": [[5, 1, 1, "", "export"], [5, 1, 1, "", "load"], [5, 1, 1, "", "make_mrng"]], "gustaf.io.nutils": [[5, 1, 1, "", "export"], [5, 1, 1, "", "load"], [5, 1, 1, "", "to_nutils_simplex"]], "gustaf.show": [[2, 1, 1, "", "interpolate_vedo_dictcam"], [2, 1, 1, "", "make_showable"], [2, 1, 1, "", "show"], [2, 1, 1, "", "show_vedo"]], "gustaf.spline": [[6, 0, 0, "-", "base"], [6, 0, 0, "-", "create"], [6, 0, 0, "-", "extract"], [6, 0, 0, "-", "ffd"], [6, 0, 0, "-", "proximity"], [6, 0, 0, "-", "visualize"]], "gustaf.spline.base": [[6, 2, 1, "", "BSpline"], [6, 2, 1, "", "Bezier"], [6, 2, 1, "", "GustafSpline"], [6, 2, 1, "", "NURBS"], [6, 2, 1, "", "RationalBezier"], [6, 1, 1, "", "from_mfem"], [6, 1, 1, "", "load_splines"], [6, 1, 1, "", "show"]], "gustaf.spline.base.BSpline": [[6, 3, 1, "", "__init__"], [6, 4, 1, "", "bspline"], [6, 5, 1, "", "create"], [6, 5, 1, "", "extract"], [6, 4, 1, "", "nurbs"], [6, 5, 1, "", "proximity"]], "gustaf.spline.base.Bezier": [[6, 3, 1, "", "__init__"], [6, 4, 1, "", "bezier"], [6, 4, 1, "", "bspline"], [6, 5, 1, "", "create"], [6, 5, 1, "", "extract"], [6, 4, 1, "", "nurbs"], [6, 5, 1, "", "proximity"], [6, 4, 1, "", "rationalbezier"]], "gustaf.spline.base.GustafSpline": [[6, 3, 1, "", "__init__"], [6, 4, 1, "", "create"], [6, 4, 1, "", "extract"], [6, 4, 1, "", "proximity"], [6, 3, 1, "", "show"], [6, 4, 1, "", "show_options"], [6, 3, 1, "", "showable"], [6, 4, 1, "", "spline_data"]], "gustaf.spline.base.NURBS": [[6, 3, 1, "", "__init__"], [6, 5, 1, "", "create"], [6, 5, 1, "", "extract"], [6, 4, 1, "", "nurbs"], [6, 5, 1, "", "proximity"]], "gustaf.spline.base.RationalBezier": [[6, 3, 1, "", "__init__"], [6, 5, 1, "", "create"], [6, 5, 1, "", "extract"], [6, 4, 1, "", "nurbs"], [6, 5, 1, "", "proximity"], [6, 4, 1, "", "rationalbezier"]], "gustaf.spline.create": [[6, 2, 1, "", "Creator"], [6, 1, 1, "", "arc"], [6, 1, 1, "", "box"], [6, 1, 1, "", "circle"], [6, 1, 1, "", "cone"], [6, 1, 1, "", "disk"], [6, 1, 1, "", "extruded"], [6, 1, 1, "", "from_bounds"], [6, 1, 1, "", "line"], [6, 1, 1, "", "parametric_view"], [6, 1, 1, "", "plate"], [6, 1, 1, "", "pyramid"], [6, 1, 1, "", "revolved"], [6, 1, 1, "", "sphere"], [6, 1, 1, "", "torus"]], "gustaf.spline.create.Creator": [[6, 3, 1, "", "__init__"], [6, 3, 1, "", "extruded"], [6, 3, 1, "", "parametric_view"], [6, 3, 1, "", "revolved"]], "gustaf.spline.extract": [[6, 2, 1, "", "Extractor"], [6, 1, 1, "", "control_edges"], [6, 1, 1, "", "control_faces"], [6, 1, 1, "", "control_mesh"], [6, 1, 1, "", "control_points"], [6, 1, 1, "", "control_volumes"], [6, 1, 1, "", "edges"], [6, 1, 1, "", "faces"], [6, 1, 1, "", "spline"], [6, 1, 1, "", "volumes"]], "gustaf.spline.extract.Extractor": [[6, 3, 1, "", "__init__"], [6, 3, 1, "", "beziers"], [6, 3, 1, "", "boundaries"], [6, 3, 1, "", "control_edges"], [6, 3, 1, "", "control_faces"], [6, 3, 1, "", "control_mesh"], [6, 3, 1, "", "control_points"], [6, 3, 1, "", "control_volumes"], [6, 3, 1, "", "edges"], [6, 3, 1, "", "faces"], [6, 3, 1, "", "spline"], [6, 3, 1, "", "volumes"]], "gustaf.spline.ffd": [[6, 2, 1, "", "FFD"], [6, 1, 1, "", "is_spline"]], "gustaf.spline.ffd.FFD": [[6, 3, 1, "", "__init__"], [6, 4, 1, "", "control_points"], [6, 3, 1, "", "elevate_degree"], [6, 3, 1, "", "insert_knots"], [6, 4, 1, "", "mesh"], [6, 3, 1, "", "reduce_degree"], [6, 3, 1, "", "remove_knots"], [6, 3, 1, "", "show"], [6, 3, 1, "", "showable"], [6, 4, 1, "", "spline"]], "gustaf.spline.microstructure": [[7, 0, 0, "-", "microstructure"]], "gustaf.spline.microstructure.microstructure": [[7, 2, 1, "", "Microstructure"]], "gustaf.spline.microstructure.microstructure.Microstructure": [[7, 3, 1, "", "__init__"], [7, 3, 1, "", "create"], [7, 4, 1, "", "deformation_function"], [7, 4, 1, "", "microtile"], [7, 4, 1, "", "parametrization_function"], [7, 3, 1, "", "show"], [7, 4, 1, "", "tiling"]], "gustaf.spline.microstructure.tiles": [[8, 0, 0, "-", "crosstile2d"], [8, 0, 0, "-", "crosstile3d"], [8, 0, 0, "-", "inversecrosstile3d"], [8, 0, 0, "-", "tilebase"]], "gustaf.spline.microstructure.tiles.crosstile2d": [[8, 2, 1, "", "CrossTile2D"]], "gustaf.spline.microstructure.tiles.crosstile2d.CrossTile2D": [[8, 3, 1, "", "__init__"], [8, 3, 1, "", "closing_tile"], [8, 3, 1, "", "create_tile"]], "gustaf.spline.microstructure.tiles.crosstile3d": [[8, 2, 1, "", "CrossTile3D"]], "gustaf.spline.microstructure.tiles.crosstile3d.CrossTile3D": [[8, 3, 1, "", "__init__"], [8, 3, 1, "", "closing_tile"], [8, 3, 1, "", "create_tile"]], "gustaf.spline.microstructure.tiles.inversecrosstile3d": [[8, 2, 1, "", "InverseCrossTile3D"]], "gustaf.spline.microstructure.tiles.inversecrosstile3d.InverseCrossTile3D": [[8, 3, 1, "", "__init__"], [8, 3, 1, "", "closing_tile"], [8, 3, 1, "", "create_tile"]], "gustaf.spline.microstructure.tiles.tilebase": [[8, 2, 1, "", "TileBase"]], "gustaf.spline.microstructure.tiles.tilebase.TileBase": [[8, 3, 1, "", "__init__"], [8, 4, 1, "", "dim"], [8, 4, 1, "", "evaluation_points"], [8, 4, 1, "", "parameter_space_dimension"]], "gustaf.spline.proximity": [[6, 2, 1, "", "Proximity"], [6, 1, 1, "", "closest_control_points"], [6, 1, 1, "", "closest_parametric_coordinate"]], "gustaf.spline.proximity.Proximity": [[6, 3, 1, "", "__init__"], [6, 3, 1, "", "closest_control_points"]], "gustaf.spline.visualize": [[6, 2, 1, "", "SplineShowOption"], [6, 1, 1, "", "make_showable"]], "gustaf.spline.visualize.SplineShowOption": [[6, 3, 1, "", "__init__"]], "gustaf.utils": [[9, 0, 0, "-", "arr"], [9, 0, 0, "-", "connec"], [9, 0, 0, "-", "log"], [9, 0, 0, "-", "tictoc"]], "gustaf.utils.arr": [[9, 1, 1, "", "bounds"], [9, 1, 1, "", "bounds_diagonal"], [9, 1, 1, "", "bounds_mean"], [9, 1, 1, "", "bounds_norm"], [9, 1, 1, "", "close_rows"], [9, 1, 1, "", "enforce_len"], [9, 1, 1, "", "is_one_of_shapes"], [9, 1, 1, "", "is_shape"], [9, 1, 1, "", "make_c_contiguous"], [9, 1, 1, "", "rotate"], [9, 1, 1, "", "rotation_matrix"], [9, 1, 1, "", "rotation_matrix_around_axis"], [9, 1, 1, "", "select_with_ranges"], [9, 1, 1, "", "unique_rows"]], "gustaf.utils.connec": [[9, 1, 1, "", "faces_to_edges"], [9, 1, 1, "", "hexa_to_quad"], [9, 1, 1, "", "make_hexa_volumes"], [9, 1, 1, "", "make_quad_faces"], [9, 1, 1, "", "range_to_edges"], [9, 1, 1, "", "sequence_to_edges"], [9, 1, 1, "", "sorted_unique"], [9, 1, 1, "", "subdivide_edges"], [9, 1, 1, "", "subdivide_quad"], [9, 1, 1, "", "subdivide_tri"], [9, 1, 1, "", "tet_to_tri"], [9, 1, 1, "", "volumes_to_faces"]], "gustaf.utils.log": [[9, 1, 1, "", "configure"], [9, 1, 1, "", "debug"], [9, 1, 1, "", "info"], [9, 1, 1, "", "prepended_log"], [9, 1, 1, "", "warning"]], "gustaf.utils.tictoc": [[9, 2, 1, "", "Tic"]], "gustaf.utils.tictoc.Tic": [[9, 3, 1, "", "__init__"], [9, 3, 1, "", "now"], [9, 3, 1, "", "summary"], [9, 3, 1, "", "toc"]], "gustaf.vertices": [[2, 2, 1, "", "Vertices"], [2, 2, 1, "", "VerticesShowOption"]], "gustaf.vertices.Vertices": [[2, 3, 1, "", "__init__"], [2, 3, 1, "", "bounds"], [2, 3, 1, "", "bounds_diagonal"], [2, 3, 1, "", "bounds_diagonal_norm"], [2, 3, 1, "", "concat"], [2, 4, 1, "", "const_vertices"], [2, 3, 1, "", "copy"], [2, 5, 1, "", "kind"], [2, 3, 1, "", "merge_vertices"], [2, 3, 1, "", "remove_vertices"], [2, 3, 1, "", "select_vertices"], [2, 4, 1, "", "setter_copies"], [2, 3, 1, "", "show"], [2, 4, 1, "", "show_options"], [2, 3, 1, "", "showable"], [2, 3, 1, "", "unique_vertices"], [2, 3, 1, "", "update_vertices"], [2, 4, 1, "", "vertex_data"], [2, 4, 1, "", "vertices"], [2, 4, 1, "", "vis_dict"], [2, 4, 1, "", "whatami"]], "gustaf.volumes": [[2, 2, 1, "", "Volumes"], [2, 2, 1, "", "VolumesShowOption"]], "gustaf.volumes.Volumes": [[2, 3, 1, "", "__init__"], [2, 4, 1, "", "const_faces"], [2, 4, 1, "", "const_volumes"], [2, 3, 1, "", "faces"], [2, 5, 1, "", "kind"], [2, 3, 1, "", "sorted_volumes"], [2, 3, 1, "", "to_faces"], [2, 3, 1, "", "unique_volumes"], [2, 3, 1, "", "update_faces"], [2, 3, 1, "", "update_volumes"], [2, 4, 1, "", "volumes"], [2, 3, 1, "", "whatareyou"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"contribut": [0, 10], "quick": [0, 10], "start": [0, 10], "style": 0, "implement": 0, "prefer": 0, "format": 0, "check": 0, "local": 0, "doc": 0, "build": 0, "bash": 0, "script": 0, "document": 0, "featur": 1, "detail": 1, "option": [1, 4, 12], "gustaf": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "edg": [2, 3], "face": [2, 3], "meshmak": 2, "segment": 2, "set": 2, "show": [2, 12], "vertic": [2, 3], "volum": [2, 3], "creat": [3, 6], "helper": 4, "data": 4, "raise_if": 4, "io": 5, "default": 5, "ioutil": 5, "meshio": 5, "mfem": 5, "mixd": 5, "nutil": 5, "spline": [6, 7, 8], "base": 6, "extract": 6, "ffd": 6, "proxim": 6, "visual": 6, "microstructur": [7, 8], "tile": 8, "crosstile2d": 8, "crosstile3d": 8, "inversecrosstile3d": 8, "tilebas": 8, "util": 9, "arr": 9, "connec": 9, "log": 9, "tictoc": 9, "instal": 10, "depend": 10, "sourc": 10, "librari": 10, "verticesshowopt": 12, "vedo": 12, "edgesshowopt": 12, "facesshowopt": 12, "volumesshowopt": 12}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Contributing": [[0, "contributing"], [0, "id1"], [10, "contributing"]], "Quick start": [[0, "quick-start"]], "Style / implementation preferences": [[0, "style-implementation-preferences"]], "Formatting and style check": [[0, "formatting-and-style-check"]], "Local docs build": [[0, "local-docs-build"]], "Bash script for format and documentation build checking": [[0, "bash-script-for-format-and-documentation-build-checking"]], "Feature details & options": [[1, "feature-details-options"]], "gustaf": [[2, "gustaf"], [10, "gustaf"], [11, "gustaf"]], "gustaf.edges": [[2, "module-gustaf.edges"]], "gustaf.faces": [[2, "module-gustaf.faces"]], "gustaf.meshmaker": [[2, "module-gustaf.meshmaker"]], "gustaf.segment": [[2, "module-gustaf.segment"]], "gustaf.settings": [[2, "module-gustaf.settings"]], "gustaf.show": [[2, "module-gustaf.show"]], "gustaf.vertices": [[2, "module-gustaf.vertices"]], "gustaf.volumes": [[2, "module-gustaf.volumes"]], "gustaf.create": [[3, "gustaf-create"]], "gustaf.create.edges": [[3, "module-gustaf.create.edges"]], "gustaf.create.faces": [[3, "module-gustaf.create.faces"]], "gustaf.create.vertices": [[3, "module-gustaf.create.vertices"]], "gustaf.create.volumes": [[3, "module-gustaf.create.volumes"]], "gustaf.helpers": [[4, "gustaf-helpers"]], "gustaf.helpers.data": [[4, "module-gustaf.helpers.data"]], "gustaf.helpers.options": [[4, "module-gustaf.helpers.options"]], "gustaf.helpers.raise_if": [[4, "module-gustaf.helpers.raise_if"]], "gustaf.io": [[5, "gustaf-io"]], "gustaf.io.default": [[5, "module-gustaf.io.default"]], "gustaf.io.ioutils": [[5, "module-gustaf.io.ioutils"]], "gustaf.io.meshio": [[5, "module-gustaf.io.meshio"]], "gustaf.io.mfem": [[5, "module-gustaf.io.mfem"]], "gustaf.io.mixd": [[5, "module-gustaf.io.mixd"]], "gustaf.io.nutils": [[5, "module-gustaf.io.nutils"]], "gustaf.spline": [[6, "gustaf-spline"]], "gustaf.spline.base": [[6, "module-gustaf.spline.base"]], "gustaf.spline.create": [[6, "module-gustaf.spline.create"]], "gustaf.spline.extract": [[6, "module-gustaf.spline.extract"]], "gustaf.spline.ffd": [[6, "module-gustaf.spline.ffd"]], "gustaf.spline.proximity": [[6, "module-gustaf.spline.proximity"]], "gustaf.spline.visualize": [[6, "module-gustaf.spline.visualize"]], "gustaf.spline.microstructure": [[7, "gustaf-spline-microstructure"]], "gustaf.spline.microstructure.microstructure": [[7, "module-gustaf.spline.microstructure.microstructure"]], "gustaf.spline.microstructure.tiles": [[8, "gustaf-spline-microstructure-tiles"]], "gustaf.spline.microstructure.tiles.crosstile2d": [[8, "module-gustaf.spline.microstructure.tiles.crosstile2d"]], "gustaf.spline.microstructure.tiles.crosstile3d": [[8, "module-gustaf.spline.microstructure.tiles.crosstile3d"]], "gustaf.spline.microstructure.tiles.inversecrosstile3d": [[8, "module-gustaf.spline.microstructure.tiles.inversecrosstile3d"]], "gustaf.spline.microstructure.tiles.tilebase": [[8, "module-gustaf.spline.microstructure.tiles.tilebase"]], "gustaf.utils": [[9, "gustaf-utils"]], "gustaf.utils.arr": [[9, "module-gustaf.utils.arr"]], "gustaf.utils.connec": [[9, "module-gustaf.utils.connec"]], "gustaf.utils.log": [[9, "module-gustaf.utils.log"]], "gustaf.utils.tictoc": [[9, "module-gustaf.utils.tictoc"]], "Installation": [[10, "installation"]], "Quick Start": [[10, "quick-start"]], "Dependencies": [[10, "dependencies"]], "Sources": [[10, "sources"]], "Library": [[10, "library"]], "Show Options": [[12, "show-options"]], "VerticesShowOption": [[12, "verticesshowoption"]], "vedo": [[12, "vedo"], [12, "id1"], [12, "id2"], [12, "id3"]], "EdgesShowOption": [[12, "edgesshowoption"]], "FacesShowOption": [[12, "facesshowoption"]], "VolumesShowOption": [[12, "volumesshowoption"]]}, "indexentries": {"bc (gustaf.faces.faces attribute)": [[2, "gustaf.faces.Faces.BC"]], "edges (class in gustaf.edges)": [[2, "gustaf.edges.Edges"]], "edgesshowoption (class in gustaf.edges)": [[2, "gustaf.edges.EdgesShowOption"]], "faces (class in gustaf.faces)": [[2, "gustaf.faces.Faces"]], "facesshowoption (class in gustaf.faces)": [[2, "gustaf.faces.FacesShowOption"]], "vertices (class in gustaf.vertices)": [[2, "gustaf.vertices.Vertices"]], "verticesshowoption (class in gustaf.vertices)": [[2, "gustaf.vertices.VerticesShowOption"]], "volumes (class in gustaf.volumes)": [[2, "gustaf.volumes.Volumes"]], "volumesshowoption (class in gustaf.volumes)": [[2, "gustaf.volumes.VolumesShowOption"]], "__init__() (gustaf.edges.edges method)": [[2, "gustaf.edges.Edges.__init__"]], "__init__() (gustaf.faces.faces method)": [[2, "gustaf.faces.Faces.__init__"]], "__init__() (gustaf.vertices.vertices method)": [[2, "gustaf.vertices.Vertices.__init__"]], "__init__() (gustaf.volumes.volumes method)": [[2, "gustaf.volumes.Volumes.__init__"]], "bounds() (gustaf.vertices.vertices method)": [[2, "gustaf.vertices.Vertices.bounds"]], "bounds_diagonal() (gustaf.vertices.vertices method)": [[2, "gustaf.vertices.Vertices.bounds_diagonal"]], "bounds_diagonal_norm() (gustaf.vertices.vertices method)": [[2, "gustaf.vertices.Vertices.bounds_diagonal_norm"]], "centers() (gustaf.edges.edges method)": [[2, "gustaf.edges.Edges.centers"]], "concat() (gustaf.vertices.vertices class method)": [[2, "gustaf.vertices.Vertices.concat"]], "const_edges (gustaf.edges.edges property)": [[2, "gustaf.edges.Edges.const_edges"]], "const_edges (gustaf.faces.faces property)": [[2, "gustaf.faces.Faces.const_edges"]], "const_elements (gustaf.edges.edges property)": [[2, "gustaf.edges.Edges.const_elements"]], "const_faces (gustaf.faces.faces property)": [[2, "gustaf.faces.Faces.const_faces"]], "const_faces (gustaf.volumes.volumes property)": [[2, "gustaf.volumes.Volumes.const_faces"]], "const_vertices (gustaf.vertices.vertices property)": [[2, "gustaf.vertices.Vertices.const_vertices"]], "const_volumes (gustaf.volumes.volumes property)": [[2, "gustaf.volumes.Volumes.const_volumes"]], "copy() (gustaf.vertices.vertices method)": [[2, "gustaf.vertices.Vertices.copy"]], "dashed() (gustaf.edges.edges method)": [[2, "gustaf.edges.Edges.dashed"]], "dashed() (gustaf.faces.faces method)": [[2, "gustaf.faces.Faces.dashed"]], "edges (gustaf.edges.edges property)": [[2, "gustaf.edges.Edges.edges"]], "edges() (gustaf.faces.faces method)": [[2, "gustaf.faces.Faces.edges"]], "elements (gustaf.edges.edges property)": [[2, "gustaf.edges.Edges.elements"]], "faces (gustaf.faces.faces property)": [[2, "gustaf.faces.Faces.faces"]], "faces() (gustaf.volumes.volumes method)": [[2, "gustaf.volumes.Volumes.faces"]], "gustaf.edges": [[2, "module-gustaf.edges"]], "gustaf.faces": [[2, "module-gustaf.faces"]], "gustaf.meshmaker": [[2, "module-gustaf.meshmaker"]], "gustaf.segment": [[2, "module-gustaf.segment"]], "gustaf.settings": [[2, "module-gustaf.settings"]], "gustaf.show": [[2, "module-gustaf.show"]], "gustaf.vertices": [[2, "module-gustaf.vertices"]], "gustaf.volumes": [[2, "module-gustaf.volumes"]], "interpolate_vedo_dictcam() (in module gustaf.show)": [[2, "gustaf.show.interpolate_vedo_dictcam"]], "kind (gustaf.edges.edges attribute)": [[2, "gustaf.edges.Edges.kind"]], "kind (gustaf.faces.faces attribute)": [[2, "gustaf.faces.Faces.kind"]], "kind (gustaf.vertices.vertices attribute)": [[2, "gustaf.vertices.Vertices.kind"]], "kind (gustaf.volumes.volumes attribute)": [[2, "gustaf.volumes.Volumes.kind"]], "make_showable() (in module gustaf.show)": [[2, "gustaf.show.make_showable"]], "merge_vertices() (gustaf.vertices.vertices method)": [[2, "gustaf.vertices.Vertices.merge_vertices"]], "module": [[2, "module-gustaf.edges"], [2, "module-gustaf.faces"], [2, "module-gustaf.meshmaker"], [2, "module-gustaf.segment"], [2, "module-gustaf.settings"], [2, "module-gustaf.show"], [2, "module-gustaf.vertices"], [2, "module-gustaf.volumes"], [3, "module-gustaf.create.edges"], [3, "module-gustaf.create.faces"], [3, "module-gustaf.create.vertices"], [3, "module-gustaf.create.volumes"], [4, "module-gustaf.helpers.data"], [4, "module-gustaf.helpers.options"], [4, "module-gustaf.helpers.raise_if"], [5, "module-gustaf.io.default"], [5, "module-gustaf.io.ioutils"], [5, "module-gustaf.io.meshio"], [5, "module-gustaf.io.mfem"], [5, "module-gustaf.io.mixd"], [5, "module-gustaf.io.nutils"], [6, "module-gustaf.spline.base"], [6, "module-gustaf.spline.create"], [6, "module-gustaf.spline.extract"], [6, "module-gustaf.spline.ffd"], [6, "module-gustaf.spline.proximity"], [6, "module-gustaf.spline.visualize"], [7, "module-gustaf.spline.microstructure.microstructure"], [8, "module-gustaf.spline.microstructure.tiles.crosstile2d"], [8, "module-gustaf.spline.microstructure.tiles.crosstile3d"], [8, "module-gustaf.spline.microstructure.tiles.inversecrosstile3d"], [8, "module-gustaf.spline.microstructure.tiles.tilebase"], [9, "module-gustaf.utils.arr"], [9, "module-gustaf.utils.connec"], [9, "module-gustaf.utils.log"], [9, "module-gustaf.utils.tictoc"]], "referenced_vertices() (gustaf.edges.edges method)": [[2, "gustaf.edges.Edges.referenced_vertices"]], "remove_unreferenced_vertices() (gustaf.edges.edges method)": [[2, "gustaf.edges.Edges.remove_unreferenced_vertices"]], "remove_vertices() (gustaf.vertices.vertices method)": [[2, "gustaf.vertices.Vertices.remove_vertices"]], "select_vertices() (gustaf.vertices.vertices method)": [[2, "gustaf.vertices.Vertices.select_vertices"]], "setter_copies (gustaf.vertices.vertices property)": [[2, "gustaf.vertices.Vertices.setter_copies"]], "show() (gustaf.vertices.vertices method)": [[2, "gustaf.vertices.Vertices.show"]], "show() (in module gustaf.show)": [[2, "gustaf.show.show"]], "show_options (gustaf.vertices.vertices property)": [[2, "gustaf.vertices.Vertices.show_options"]], "show_vedo() (in module gustaf.show)": [[2, "gustaf.show.show_vedo"]], "showable() (gustaf.vertices.vertices method)": [[2, "gustaf.vertices.Vertices.showable"]], "shrink() (gustaf.edges.edges method)": [[2, "gustaf.edges.Edges.shrink"]], "single_edges() (gustaf.edges.edges method)": [[2, "gustaf.edges.Edges.single_edges"]], "single_faces() (gustaf.faces.faces method)": [[2, "gustaf.faces.Faces.single_faces"]], "sorted_edges() (gustaf.edges.edges method)": [[2, "gustaf.edges.Edges.sorted_edges"]], "sorted_faces() (gustaf.faces.faces method)": [[2, "gustaf.faces.Faces.sorted_faces"]], "sorted_volumes() (gustaf.volumes.volumes method)": [[2, "gustaf.volumes.Volumes.sorted_volumes"]], "to_edges() (gustaf.faces.faces method)": [[2, "gustaf.faces.Faces.to_edges"]], "to_faces() (gustaf.volumes.volumes method)": [[2, "gustaf.volumes.Volumes.to_faces"]], "to_vertices() (gustaf.edges.edges method)": [[2, "gustaf.edges.Edges.to_vertices"]], "unique_edges() (gustaf.edges.edges method)": [[2, "gustaf.edges.Edges.unique_edges"]], "unique_faces() (gustaf.faces.faces method)": [[2, "gustaf.faces.Faces.unique_faces"]], "unique_vertices() (gustaf.vertices.vertices method)": [[2, "gustaf.vertices.Vertices.unique_vertices"]], "unique_volumes() (gustaf.volumes.volumes method)": [[2, "gustaf.volumes.Volumes.unique_volumes"]], "update_edges() (gustaf.edges.edges method)": [[2, "gustaf.edges.Edges.update_edges"]], "update_edges() (gustaf.faces.faces method)": [[2, "gustaf.faces.Faces.update_edges"]], "update_elements() (gustaf.edges.edges method)": [[2, "gustaf.edges.Edges.update_elements"]], "update_faces() (gustaf.faces.faces method)": [[2, "gustaf.faces.Faces.update_faces"]], "update_faces() (gustaf.volumes.volumes method)": [[2, "gustaf.volumes.Volumes.update_faces"]], "update_vertices() (gustaf.vertices.vertices method)": [[2, "gustaf.vertices.Vertices.update_vertices"]], "update_volumes() (gustaf.volumes.volumes method)": [[2, "gustaf.volumes.Volumes.update_volumes"]], "vertex_data (gustaf.vertices.vertices property)": [[2, "gustaf.vertices.Vertices.vertex_data"]], "vertices (gustaf.vertices.vertices property)": [[2, "gustaf.vertices.Vertices.vertices"]], "vis_dict (gustaf.vertices.vertices property)": [[2, "gustaf.vertices.Vertices.vis_dict"]], "volumes (gustaf.volumes.volumes property)": [[2, "gustaf.volumes.Volumes.volumes"]], "whatami (gustaf.edges.edges property)": [[2, "gustaf.edges.Edges.whatami"]], "whatami (gustaf.faces.faces property)": [[2, "gustaf.faces.Faces.whatami"]], "whatami (gustaf.vertices.vertices property)": [[2, "gustaf.vertices.Vertices.whatami"]], "whatareyou() (gustaf.faces.faces class method)": [[2, "gustaf.faces.Faces.whatareyou"]], "whatareyou() (gustaf.volumes.volumes class method)": [[2, "gustaf.volumes.Volumes.whatareyou"]], "box() (in module gustaf.create.faces)": [[3, "gustaf.create.faces.box"]], "box() (in module gustaf.create.volumes)": [[3, "gustaf.create.volumes.box"]], "from_data() (in module gustaf.create.edges)": [[3, "gustaf.create.edges.from_data"]], "gustaf.create.edges": [[3, "module-gustaf.create.edges"]], "gustaf.create.faces": [[3, "module-gustaf.create.faces"]], "gustaf.create.vertices": [[3, "module-gustaf.create.vertices"]], "gustaf.create.volumes": [[3, "module-gustaf.create.volumes"]], "raster() (in module gustaf.create.vertices)": [[3, "gustaf.create.vertices.raster"]], "to_simplex() (in module gustaf.create.faces)": [[3, "gustaf.create.faces.to_simplex"]], "computeddata (class in gustaf.helpers.data)": [[4, "gustaf.helpers.data.ComputedData"]], "computedmeshdata (class in gustaf.helpers.data)": [[4, "gustaf.helpers.data.ComputedMeshData"]], "dataholder (class in gustaf.helpers.data)": [[4, "gustaf.helpers.data.DataHolder"]], "moduleimportraiser (class in gustaf.helpers.raise_if)": [[4, "gustaf.helpers.raise_if.ModuleImportRaiser"]], "option (class in gustaf.helpers.options)": [[4, "gustaf.helpers.options.Option"]], "showoption (class in gustaf.helpers.options)": [[4, "gustaf.helpers.options.ShowOption"]], "splinedata (class in gustaf.helpers.data)": [[4, "gustaf.helpers.data.SplineData"]], "splinedataadaptor (class in gustaf.helpers.data)": [[4, "gustaf.helpers.data.SplineDataAdaptor"]], "trackedarray (class in gustaf.helpers.data)": [[4, "gustaf.helpers.data.TrackedArray"]], "unique2dfloats (class in gustaf.helpers.data)": [[4, "gustaf.helpers.data.Unique2DFloats"]], "unique2dintegers (class in gustaf.helpers.data)": [[4, "gustaf.helpers.data.Unique2DIntegers"]], "vertexdata (class in gustaf.helpers.data)": [[4, "gustaf.helpers.data.VertexData"]], "__init__() (gustaf.helpers.data.computeddata method)": [[4, "gustaf.helpers.data.ComputedData.__init__"]], "__init__() (gustaf.helpers.data.dataholder method)": [[4, "gustaf.helpers.data.DataHolder.__init__"]], "__init__() (gustaf.helpers.data.splinedata method)": [[4, "gustaf.helpers.data.SplineData.__init__"]], "__init__() (gustaf.helpers.data.splinedataadaptor method)": [[4, "gustaf.helpers.data.SplineDataAdaptor.__init__"]], "__init__() (gustaf.helpers.data.vertexdata method)": [[4, "gustaf.helpers.data.VertexData.__init__"]], "__init__() (gustaf.helpers.options.option method)": [[4, "gustaf.helpers.options.Option.__init__"]], "__init__() (gustaf.helpers.options.showoption method)": [[4, "gustaf.helpers.options.ShowOption.__init__"]], "__init__() (gustaf.helpers.raise_if.moduleimportraiser method)": [[4, "gustaf.helpers.raise_if.ModuleImportRaiser.__init__"]], "allowed_types (gustaf.helpers.options.option attribute)": [[4, "gustaf.helpers.options.Option.allowed_types"]], "arrow_data_only (gustaf.helpers.data.splinedataadaptor attribute)": [[4, "gustaf.helpers.data.SplineDataAdaptor.arrow_data_only"]], "as_arrow() (gustaf.helpers.data.splinedata method)": [[4, "gustaf.helpers.data.SplineData.as_arrow"]], "as_arrow() (gustaf.helpers.data.vertexdata method)": [[4, "gustaf.helpers.data.VertexData.as_arrow"]], "as_scalar() (gustaf.helpers.data.splinedata method)": [[4, "gustaf.helpers.data.SplineData.as_scalar"]], "as_scalar() (gustaf.helpers.data.vertexdata method)": [[4, "gustaf.helpers.data.VertexData.as_scalar"]], "as_vertex_data() (gustaf.helpers.data.splinedataadaptor method)": [[4, "gustaf.helpers.data.SplineDataAdaptor.as_vertex_data"]], "backend (gustaf.helpers.options.option attribute)": [[4, "gustaf.helpers.options.Option.backend"]], "clear() (gustaf.helpers.data.dataholder method)": [[4, "gustaf.helpers.data.DataHolder.clear"]], "clear() (gustaf.helpers.options.showoption method)": [[4, "gustaf.helpers.options.ShowOption.clear"]], "copy() (gustaf.helpers.data.trackedarray method)": [[4, "gustaf.helpers.data.TrackedArray.copy"]], "copy_valid_options() (gustaf.helpers.options.showoption method)": [[4, "gustaf.helpers.options.ShowOption.copy_valid_options"]], "counts (gustaf.helpers.data.unique2dintegers attribute)": [[4, "gustaf.helpers.data.Unique2DIntegers.counts"]], "data (gustaf.helpers.data.splinedataadaptor attribute)": [[4, "gustaf.helpers.data.SplineDataAdaptor.data"]], "depends_on() (gustaf.helpers.data.computeddata class method)": [[4, "gustaf.helpers.data.ComputedData.depends_on"]], "description (gustaf.helpers.options.option attribute)": [[4, "gustaf.helpers.options.Option.description"]], "function (gustaf.helpers.data.splinedataadaptor attribute)": [[4, "gustaf.helpers.data.SplineDataAdaptor.function"]], "get() (gustaf.helpers.data.dataholder method)": [[4, "gustaf.helpers.data.DataHolder.get"]], "get() (gustaf.helpers.options.showoption method)": [[4, "gustaf.helpers.options.ShowOption.get"]], "gustaf.helpers.data": [[4, "module-gustaf.helpers.data"]], "gustaf.helpers.options": [[4, "module-gustaf.helpers.options"]], "gustaf.helpers.raise_if": [[4, "module-gustaf.helpers.raise_if"]], "has_evaluate (gustaf.helpers.data.splinedataadaptor attribute)": [[4, "gustaf.helpers.data.SplineDataAdaptor.has_evaluate"]], "has_function (gustaf.helpers.data.splinedataadaptor attribute)": [[4, "gustaf.helpers.data.SplineDataAdaptor.has_function"]], "has_locations (gustaf.helpers.data.splinedataadaptor attribute)": [[4, "gustaf.helpers.data.SplineDataAdaptor.has_locations"]], "ids (gustaf.helpers.data.unique2dfloats attribute)": [[4, "gustaf.helpers.data.Unique2DFloats.ids"]], "ids (gustaf.helpers.data.unique2dintegers attribute)": [[4, "gustaf.helpers.data.Unique2DIntegers.ids"]], "intersection (gustaf.helpers.data.unique2dfloats attribute)": [[4, "gustaf.helpers.data.Unique2DFloats.intersection"]], "invalid_inherited_attr() (in module gustaf.helpers.raise_if)": [[4, "gustaf.helpers.raise_if.invalid_inherited_attr"]], "inverse (gustaf.helpers.data.unique2dfloats attribute)": [[4, "gustaf.helpers.data.Unique2DFloats.inverse"]], "inverse (gustaf.helpers.data.unique2dintegers attribute)": [[4, "gustaf.helpers.data.Unique2DIntegers.inverse"]], "is_spline (gustaf.helpers.data.splinedataadaptor attribute)": [[4, "gustaf.helpers.data.SplineDataAdaptor.is_spline"]], "items() (gustaf.helpers.data.dataholder method)": [[4, "gustaf.helpers.data.DataHolder.items"]], "items() (gustaf.helpers.options.showoption method)": [[4, "gustaf.helpers.options.ShowOption.items"]], "key (gustaf.helpers.options.option attribute)": [[4, "gustaf.helpers.options.Option.key"]], "keys() (gustaf.helpers.data.dataholder method)": [[4, "gustaf.helpers.data.DataHolder.keys"]], "keys() (gustaf.helpers.options.showoption method)": [[4, "gustaf.helpers.options.ShowOption.keys"]], "locations (gustaf.helpers.data.splinedataadaptor attribute)": [[4, "gustaf.helpers.data.SplineDataAdaptor.locations"]], "make_tracked_array() (in module gustaf.helpers.data)": [[4, "gustaf.helpers.data.make_tracked_array"]], "make_valid_options() (in module gustaf.helpers.options)": [[4, "gustaf.helpers.options.make_valid_options"]], "mutable (gustaf.helpers.data.trackedarray property)": [[4, "gustaf.helpers.data.TrackedArray.mutable"]], "pop() (gustaf.helpers.data.dataholder method)": [[4, "gustaf.helpers.data.DataHolder.pop"]], "pop() (gustaf.helpers.options.showoption method)": [[4, "gustaf.helpers.options.ShowOption.pop"]], "update() (gustaf.helpers.options.showoption method)": [[4, "gustaf.helpers.options.ShowOption.update"]], "valid_keys() (gustaf.helpers.options.showoption method)": [[4, "gustaf.helpers.options.ShowOption.valid_keys"]], "values (gustaf.helpers.data.unique2dfloats attribute)": [[4, "gustaf.helpers.data.Unique2DFloats.values"]], "values (gustaf.helpers.data.unique2dintegers attribute)": [[4, "gustaf.helpers.data.Unique2DIntegers.values"]], "values() (gustaf.helpers.data.dataholder method)": [[4, "gustaf.helpers.data.DataHolder.values"]], "values() (gustaf.helpers.options.showoption method)": [[4, "gustaf.helpers.options.ShowOption.values"]], "view() (gustaf.helpers.data.trackedarray method)": [[4, "gustaf.helpers.data.TrackedArray.view"]], "abs_fname() (in module gustaf.io.ioutils)": [[5, "gustaf.io.ioutils.abs_fname"]], "check_and_makedirs() (in module gustaf.io.ioutils)": [[5, "gustaf.io.ioutils.check_and_makedirs"]], "export() (in module gustaf.io.meshio)": [[5, "gustaf.io.meshio.export"]], "export() (in module gustaf.io.mfem)": [[5, "gustaf.io.mfem.export"]], "export() (in module gustaf.io.mixd)": [[5, "gustaf.io.mixd.export"]], "export() (in module gustaf.io.nutils)": [[5, "gustaf.io.nutils.export"]], "gustaf.io.default": [[5, "module-gustaf.io.default"]], "gustaf.io.ioutils": [[5, "module-gustaf.io.ioutils"]], "gustaf.io.meshio": [[5, "module-gustaf.io.meshio"]], "gustaf.io.mfem": [[5, "module-gustaf.io.mfem"]], "gustaf.io.mixd": [[5, "module-gustaf.io.mixd"]], "gustaf.io.nutils": [[5, "module-gustaf.io.nutils"]], "load() (in module gustaf.io.default)": [[5, "gustaf.io.default.load"]], "load() (in module gustaf.io.meshio)": [[5, "gustaf.io.meshio.load"]], "load() (in module gustaf.io.mfem)": [[5, "gustaf.io.mfem.load"]], "load() (in module gustaf.io.mixd)": [[5, "gustaf.io.mixd.load"]], "load() (in module gustaf.io.nutils)": [[5, "gustaf.io.nutils.load"]], "make_mrng() (in module gustaf.io.mixd)": [[5, "gustaf.io.mixd.make_mrng"]], "to_nutils_simplex() (in module gustaf.io.nutils)": [[5, "gustaf.io.nutils.to_nutils_simplex"]], "bspline (class in gustaf.spline.base)": [[6, "gustaf.spline.base.BSpline"]], "bezier (class in gustaf.spline.base)": [[6, "gustaf.spline.base.Bezier"]], "creator (class in gustaf.spline.create)": [[6, "gustaf.spline.create.Creator"]], "extractor (class in gustaf.spline.extract)": [[6, "gustaf.spline.extract.Extractor"]], "ffd (class in gustaf.spline.ffd)": [[6, "gustaf.spline.ffd.FFD"]], "gustafspline (class in gustaf.spline.base)": [[6, "gustaf.spline.base.GustafSpline"]], "nurbs (class in gustaf.spline.base)": [[6, "gustaf.spline.base.NURBS"]], "proximity (class in gustaf.spline.proximity)": [[6, "gustaf.spline.proximity.Proximity"]], "rationalbezier (class in gustaf.spline.base)": [[6, "gustaf.spline.base.RationalBezier"]], "splineshowoption (class in gustaf.spline.visualize)": [[6, "gustaf.spline.visualize.SplineShowOption"]], "__init__() (gustaf.spline.base.bspline method)": [[6, "gustaf.spline.base.BSpline.__init__"]], "__init__() (gustaf.spline.base.bezier method)": [[6, "gustaf.spline.base.Bezier.__init__"]], "__init__() (gustaf.spline.base.gustafspline method)": [[6, "gustaf.spline.base.GustafSpline.__init__"]], "__init__() (gustaf.spline.base.nurbs method)": [[6, "gustaf.spline.base.NURBS.__init__"]], "__init__() (gustaf.spline.base.rationalbezier method)": [[6, "gustaf.spline.base.RationalBezier.__init__"]], "__init__() (gustaf.spline.create.creator method)": [[6, "gustaf.spline.create.Creator.__init__"]], "__init__() (gustaf.spline.extract.extractor method)": [[6, "gustaf.spline.extract.Extractor.__init__"]], "__init__() (gustaf.spline.ffd.ffd method)": [[6, "gustaf.spline.ffd.FFD.__init__"]], "__init__() (gustaf.spline.proximity.proximity method)": [[6, "gustaf.spline.proximity.Proximity.__init__"]], "__init__() (gustaf.spline.visualize.splineshowoption method)": [[6, "gustaf.spline.visualize.SplineShowOption.__init__"]], "arc() (in module gustaf.spline.create)": [[6, "gustaf.spline.create.arc"]], "bezier (gustaf.spline.base.bezier property)": [[6, "gustaf.spline.base.Bezier.bezier"]], "beziers() (gustaf.spline.extract.extractor method)": [[6, "gustaf.spline.extract.Extractor.beziers"]], "boundaries() (gustaf.spline.extract.extractor method)": [[6, "gustaf.spline.extract.Extractor.boundaries"]], "box() (in module gustaf.spline.create)": [[6, "gustaf.spline.create.box"]], "bspline (gustaf.spline.base.bspline property)": [[6, "gustaf.spline.base.BSpline.bspline"]], "bspline (gustaf.spline.base.bezier property)": [[6, "gustaf.spline.base.Bezier.bspline"]], "circle() (in module gustaf.spline.create)": [[6, "gustaf.spline.create.circle"]], "closest_control_points() (gustaf.spline.proximity.proximity method)": [[6, "gustaf.spline.proximity.Proximity.closest_control_points"]], "closest_control_points() (in module gustaf.spline.proximity)": [[6, "gustaf.spline.proximity.closest_control_points"]], "closest_parametric_coordinate() (in module gustaf.spline.proximity)": [[6, "gustaf.spline.proximity.closest_parametric_coordinate"]], "cone() (in module gustaf.spline.create)": [[6, "gustaf.spline.create.cone"]], "control_edges() (gustaf.spline.extract.extractor method)": [[6, "gustaf.spline.extract.Extractor.control_edges"]], "control_edges() (in module gustaf.spline.extract)": [[6, "gustaf.spline.extract.control_edges"]], "control_faces() (gustaf.spline.extract.extractor method)": [[6, "gustaf.spline.extract.Extractor.control_faces"]], "control_faces() (in module gustaf.spline.extract)": [[6, "gustaf.spline.extract.control_faces"]], "control_mesh() (gustaf.spline.extract.extractor method)": [[6, "gustaf.spline.extract.Extractor.control_mesh"]], "control_mesh() (in module gustaf.spline.extract)": [[6, "gustaf.spline.extract.control_mesh"]], "control_points (gustaf.spline.ffd.ffd property)": [[6, "gustaf.spline.ffd.FFD.control_points"]], "control_points() (gustaf.spline.extract.extractor method)": [[6, "gustaf.spline.extract.Extractor.control_points"]], "control_points() (in module gustaf.spline.extract)": [[6, "gustaf.spline.extract.control_points"]], "control_volumes() (gustaf.spline.extract.extractor method)": [[6, "gustaf.spline.extract.Extractor.control_volumes"]], "control_volumes() (in module gustaf.spline.extract)": [[6, "gustaf.spline.extract.control_volumes"]], "create (gustaf.spline.base.bspline attribute)": [[6, "gustaf.spline.base.BSpline.create"]], "create (gustaf.spline.base.bezier attribute)": [[6, "gustaf.spline.base.Bezier.create"]], "create (gustaf.spline.base.gustafspline property)": [[6, "gustaf.spline.base.GustafSpline.create"]], "create (gustaf.spline.base.nurbs attribute)": [[6, "gustaf.spline.base.NURBS.create"]], "create (gustaf.spline.base.rationalbezier attribute)": [[6, "gustaf.spline.base.RationalBezier.create"]], "disk() (in module gustaf.spline.create)": [[6, "gustaf.spline.create.disk"]], "edges() (gustaf.spline.extract.extractor method)": [[6, "gustaf.spline.extract.Extractor.edges"]], "edges() (in module gustaf.spline.extract)": [[6, "gustaf.spline.extract.edges"]], "elevate_degree() (gustaf.spline.ffd.ffd method)": [[6, "gustaf.spline.ffd.FFD.elevate_degree"]], "extract (gustaf.spline.base.bspline attribute)": [[6, "gustaf.spline.base.BSpline.extract"]], "extract (gustaf.spline.base.bezier attribute)": [[6, "gustaf.spline.base.Bezier.extract"]], "extract (gustaf.spline.base.gustafspline property)": [[6, "gustaf.spline.base.GustafSpline.extract"]], "extract (gustaf.spline.base.nurbs attribute)": [[6, "gustaf.spline.base.NURBS.extract"]], "extract (gustaf.spline.base.rationalbezier attribute)": [[6, "gustaf.spline.base.RationalBezier.extract"]], "extruded() (gustaf.spline.create.creator method)": [[6, "gustaf.spline.create.Creator.extruded"]], "extruded() (in module gustaf.spline.create)": [[6, "gustaf.spline.create.extruded"]], "faces() (gustaf.spline.extract.extractor method)": [[6, "gustaf.spline.extract.Extractor.faces"]], "faces() (in module gustaf.spline.extract)": [[6, "gustaf.spline.extract.faces"]], "from_bounds() (in module gustaf.spline.create)": [[6, "gustaf.spline.create.from_bounds"]], "from_mfem() (in module gustaf.spline.base)": [[6, "gustaf.spline.base.from_mfem"]], "gustaf.spline.base": [[6, "module-gustaf.spline.base"]], "gustaf.spline.create": [[6, "module-gustaf.spline.create"]], "gustaf.spline.extract": [[6, "module-gustaf.spline.extract"]], "gustaf.spline.ffd": [[6, "module-gustaf.spline.ffd"]], "gustaf.spline.proximity": [[6, "module-gustaf.spline.proximity"]], "gustaf.spline.visualize": [[6, "module-gustaf.spline.visualize"]], "insert_knots() (gustaf.spline.ffd.ffd method)": [[6, "gustaf.spline.ffd.FFD.insert_knots"]], "is_spline() (in module gustaf.spline.ffd)": [[6, "gustaf.spline.ffd.is_spline"]], "line() (in module gustaf.spline.create)": [[6, "gustaf.spline.create.line"]], "load_splines() (in module gustaf.spline.base)": [[6, "gustaf.spline.base.load_splines"]], "make_showable() (in module gustaf.spline.visualize)": [[6, "gustaf.spline.visualize.make_showable"]], "mesh (gustaf.spline.ffd.ffd property)": [[6, "gustaf.spline.ffd.FFD.mesh"]], "nurbs (gustaf.spline.base.bspline property)": [[6, "gustaf.spline.base.BSpline.nurbs"]], "nurbs (gustaf.spline.base.bezier property)": [[6, "gustaf.spline.base.Bezier.nurbs"]], "nurbs (gustaf.spline.base.nurbs property)": [[6, "gustaf.spline.base.NURBS.nurbs"]], "nurbs (gustaf.spline.base.rationalbezier property)": [[6, "gustaf.spline.base.RationalBezier.nurbs"]], "parametric_view() (gustaf.spline.create.creator method)": [[6, "gustaf.spline.create.Creator.parametric_view"]], "parametric_view() (in module gustaf.spline.create)": [[6, "gustaf.spline.create.parametric_view"]], "plate() (in module gustaf.spline.create)": [[6, "gustaf.spline.create.plate"]], "proximity (gustaf.spline.base.bspline attribute)": [[6, "gustaf.spline.base.BSpline.proximity"]], "proximity (gustaf.spline.base.bezier attribute)": [[6, "gustaf.spline.base.Bezier.proximity"]], "proximity (gustaf.spline.base.gustafspline property)": [[6, "gustaf.spline.base.GustafSpline.proximity"]], "proximity (gustaf.spline.base.nurbs attribute)": [[6, "gustaf.spline.base.NURBS.proximity"]], "proximity (gustaf.spline.base.rationalbezier attribute)": [[6, "gustaf.spline.base.RationalBezier.proximity"]], "pyramid() (in module gustaf.spline.create)": [[6, "gustaf.spline.create.pyramid"]], "rationalbezier (gustaf.spline.base.bezier property)": [[6, "gustaf.spline.base.Bezier.rationalbezier"]], "rationalbezier (gustaf.spline.base.rationalbezier property)": [[6, "gustaf.spline.base.RationalBezier.rationalbezier"]], "reduce_degree() (gustaf.spline.ffd.ffd method)": [[6, "gustaf.spline.ffd.FFD.reduce_degree"]], "remove_knots() (gustaf.spline.ffd.ffd method)": [[6, "gustaf.spline.ffd.FFD.remove_knots"]], "revolved() (gustaf.spline.create.creator method)": [[6, "gustaf.spline.create.Creator.revolved"]], "revolved() (in module gustaf.spline.create)": [[6, "gustaf.spline.create.revolved"]], "show() (gustaf.spline.base.gustafspline method)": [[6, "gustaf.spline.base.GustafSpline.show"]], "show() (gustaf.spline.ffd.ffd method)": [[6, "gustaf.spline.ffd.FFD.show"]], "show() (in module gustaf.spline.base)": [[6, "gustaf.spline.base.show"]], "show_options (gustaf.spline.base.gustafspline property)": [[6, "gustaf.spline.base.GustafSpline.show_options"]], "showable() (gustaf.spline.base.gustafspline method)": [[6, "gustaf.spline.base.GustafSpline.showable"]], "showable() (gustaf.spline.ffd.ffd method)": [[6, "gustaf.spline.ffd.FFD.showable"]], "sphere() (in module gustaf.spline.create)": [[6, "gustaf.spline.create.sphere"]], "spline (gustaf.spline.ffd.ffd property)": [[6, "gustaf.spline.ffd.FFD.spline"]], "spline() (gustaf.spline.extract.extractor method)": [[6, "gustaf.spline.extract.Extractor.spline"]], "spline() (in module gustaf.spline.extract)": [[6, "gustaf.spline.extract.spline"]], "spline_data (gustaf.spline.base.gustafspline property)": [[6, "gustaf.spline.base.GustafSpline.spline_data"]], "torus() (in module gustaf.spline.create)": [[6, "gustaf.spline.create.torus"]], "volumes() (gustaf.spline.extract.extractor method)": [[6, "gustaf.spline.extract.Extractor.volumes"]], "volumes() (in module gustaf.spline.extract)": [[6, "gustaf.spline.extract.volumes"]], "microstructure (class in gustaf.spline.microstructure.microstructure)": [[7, "gustaf.spline.microstructure.microstructure.Microstructure"]], "__init__() (gustaf.spline.microstructure.microstructure.microstructure method)": [[7, "gustaf.spline.microstructure.microstructure.Microstructure.__init__"]], "create() (gustaf.spline.microstructure.microstructure.microstructure method)": [[7, "gustaf.spline.microstructure.microstructure.Microstructure.create"]], "deformation_function (gustaf.spline.microstructure.microstructure.microstructure property)": [[7, "gustaf.spline.microstructure.microstructure.Microstructure.deformation_function"]], "gustaf.spline.microstructure.microstructure": [[7, "module-gustaf.spline.microstructure.microstructure"]], "microtile (gustaf.spline.microstructure.microstructure.microstructure property)": [[7, "gustaf.spline.microstructure.microstructure.Microstructure.microtile"]], "parametrization_function (gustaf.spline.microstructure.microstructure.microstructure property)": [[7, "gustaf.spline.microstructure.microstructure.Microstructure.parametrization_function"]], "show() (gustaf.spline.microstructure.microstructure.microstructure method)": [[7, "gustaf.spline.microstructure.microstructure.Microstructure.show"]], "tiling (gustaf.spline.microstructure.microstructure.microstructure property)": [[7, "gustaf.spline.microstructure.microstructure.Microstructure.tiling"]], "crosstile2d (class in gustaf.spline.microstructure.tiles.crosstile2d)": [[8, "gustaf.spline.microstructure.tiles.crosstile2d.CrossTile2D"]], "crosstile3d (class in gustaf.spline.microstructure.tiles.crosstile3d)": [[8, "gustaf.spline.microstructure.tiles.crosstile3d.CrossTile3D"]], "inversecrosstile3d (class in gustaf.spline.microstructure.tiles.inversecrosstile3d)": [[8, "gustaf.spline.microstructure.tiles.inversecrosstile3d.InverseCrossTile3D"]], "tilebase (class in gustaf.spline.microstructure.tiles.tilebase)": [[8, "gustaf.spline.microstructure.tiles.tilebase.TileBase"]], "__init__() (gustaf.spline.microstructure.tiles.crosstile2d.crosstile2d method)": [[8, "gustaf.spline.microstructure.tiles.crosstile2d.CrossTile2D.__init__"]], "__init__() (gustaf.spline.microstructure.tiles.crosstile3d.crosstile3d method)": [[8, "gustaf.spline.microstructure.tiles.crosstile3d.CrossTile3D.__init__"]], "__init__() (gustaf.spline.microstructure.tiles.inversecrosstile3d.inversecrosstile3d method)": [[8, "gustaf.spline.microstructure.tiles.inversecrosstile3d.InverseCrossTile3D.__init__"]], "__init__() (gustaf.spline.microstructure.tiles.tilebase.tilebase method)": [[8, "gustaf.spline.microstructure.tiles.tilebase.TileBase.__init__"]], "closing_tile() (gustaf.spline.microstructure.tiles.crosstile2d.crosstile2d method)": [[8, "gustaf.spline.microstructure.tiles.crosstile2d.CrossTile2D.closing_tile"]], "closing_tile() (gustaf.spline.microstructure.tiles.crosstile3d.crosstile3d method)": [[8, "gustaf.spline.microstructure.tiles.crosstile3d.CrossTile3D.closing_tile"]], "closing_tile() (gustaf.spline.microstructure.tiles.inversecrosstile3d.inversecrosstile3d method)": [[8, "gustaf.spline.microstructure.tiles.inversecrosstile3d.InverseCrossTile3D.closing_tile"]], "create_tile() (gustaf.spline.microstructure.tiles.crosstile2d.crosstile2d method)": [[8, "gustaf.spline.microstructure.tiles.crosstile2d.CrossTile2D.create_tile"]], "create_tile() (gustaf.spline.microstructure.tiles.crosstile3d.crosstile3d method)": [[8, "gustaf.spline.microstructure.tiles.crosstile3d.CrossTile3D.create_tile"]], "create_tile() (gustaf.spline.microstructure.tiles.inversecrosstile3d.inversecrosstile3d method)": [[8, "gustaf.spline.microstructure.tiles.inversecrosstile3d.InverseCrossTile3D.create_tile"]], "dim (gustaf.spline.microstructure.tiles.tilebase.tilebase property)": [[8, "gustaf.spline.microstructure.tiles.tilebase.TileBase.dim"]], "evaluation_points (gustaf.spline.microstructure.tiles.tilebase.tilebase property)": [[8, "gustaf.spline.microstructure.tiles.tilebase.TileBase.evaluation_points"]], "gustaf.spline.microstructure.tiles.crosstile2d": [[8, "module-gustaf.spline.microstructure.tiles.crosstile2d"]], "gustaf.spline.microstructure.tiles.crosstile3d": [[8, "module-gustaf.spline.microstructure.tiles.crosstile3d"]], "gustaf.spline.microstructure.tiles.inversecrosstile3d": [[8, "module-gustaf.spline.microstructure.tiles.inversecrosstile3d"]], "gustaf.spline.microstructure.tiles.tilebase": [[8, "module-gustaf.spline.microstructure.tiles.tilebase"]], "parameter_space_dimension (gustaf.spline.microstructure.tiles.tilebase.tilebase property)": [[8, "gustaf.spline.microstructure.tiles.tilebase.TileBase.parameter_space_dimension"]], "tic (class in gustaf.utils.tictoc)": [[9, "gustaf.utils.tictoc.Tic"]], "__init__() (gustaf.utils.tictoc.tic method)": [[9, "gustaf.utils.tictoc.Tic.__init__"]], "bounds() (in module gustaf.utils.arr)": [[9, "gustaf.utils.arr.bounds"]], "bounds_diagonal() (in module gustaf.utils.arr)": [[9, "gustaf.utils.arr.bounds_diagonal"]], "bounds_mean() (in module gustaf.utils.arr)": [[9, "gustaf.utils.arr.bounds_mean"]], "bounds_norm() (in module gustaf.utils.arr)": [[9, "gustaf.utils.arr.bounds_norm"]], "close_rows() (in module gustaf.utils.arr)": [[9, "gustaf.utils.arr.close_rows"]], "configure() (in module gustaf.utils.log)": [[9, "gustaf.utils.log.configure"]], "debug() (in module gustaf.utils.log)": [[9, "gustaf.utils.log.debug"]], "enforce_len() (in module gustaf.utils.arr)": [[9, "gustaf.utils.arr.enforce_len"]], "faces_to_edges() (in module gustaf.utils.connec)": [[9, "gustaf.utils.connec.faces_to_edges"]], "gustaf.utils.arr": [[9, "module-gustaf.utils.arr"]], "gustaf.utils.connec": [[9, "module-gustaf.utils.connec"]], "gustaf.utils.log": [[9, "module-gustaf.utils.log"]], "gustaf.utils.tictoc": [[9, "module-gustaf.utils.tictoc"]], "hexa_to_quad() (in module gustaf.utils.connec)": [[9, "gustaf.utils.connec.hexa_to_quad"]], "info() (in module gustaf.utils.log)": [[9, "gustaf.utils.log.info"]], "is_one_of_shapes() (in module gustaf.utils.arr)": [[9, "gustaf.utils.arr.is_one_of_shapes"]], "is_shape() (in module gustaf.utils.arr)": [[9, "gustaf.utils.arr.is_shape"]], "make_c_contiguous() (in module gustaf.utils.arr)": [[9, "gustaf.utils.arr.make_c_contiguous"]], "make_hexa_volumes() (in module gustaf.utils.connec)": [[9, "gustaf.utils.connec.make_hexa_volumes"]], "make_quad_faces() (in module gustaf.utils.connec)": [[9, "gustaf.utils.connec.make_quad_faces"]], "now() (gustaf.utils.tictoc.tic method)": [[9, "gustaf.utils.tictoc.Tic.now"]], "prepended_log() (in module gustaf.utils.log)": [[9, "gustaf.utils.log.prepended_log"]], "range_to_edges() (in module gustaf.utils.connec)": [[9, "gustaf.utils.connec.range_to_edges"]], "rotate() (in module gustaf.utils.arr)": [[9, "gustaf.utils.arr.rotate"]], "rotation_matrix() (in module gustaf.utils.arr)": [[9, "gustaf.utils.arr.rotation_matrix"]], "rotation_matrix_around_axis() (in module gustaf.utils.arr)": [[9, "gustaf.utils.arr.rotation_matrix_around_axis"]], "select_with_ranges() (in module gustaf.utils.arr)": [[9, "gustaf.utils.arr.select_with_ranges"]], "sequence_to_edges() (in module gustaf.utils.connec)": [[9, "gustaf.utils.connec.sequence_to_edges"]], "sorted_unique() (in module gustaf.utils.connec)": [[9, "gustaf.utils.connec.sorted_unique"]], "subdivide_edges() (in module gustaf.utils.connec)": [[9, "gustaf.utils.connec.subdivide_edges"]], "subdivide_quad() (in module gustaf.utils.connec)": [[9, "gustaf.utils.connec.subdivide_quad"]], "subdivide_tri() (in module gustaf.utils.connec)": [[9, "gustaf.utils.connec.subdivide_tri"]], "summary() (gustaf.utils.tictoc.tic method)": [[9, "gustaf.utils.tictoc.Tic.summary"]], "tet_to_tri() (in module gustaf.utils.connec)": [[9, "gustaf.utils.connec.tet_to_tri"]], "toc() (gustaf.utils.tictoc.tic method)": [[9, "gustaf.utils.tictoc.Tic.toc"]], "unique_rows() (in module gustaf.utils.arr)": [[9, "gustaf.utils.arr.unique_rows"]], "volumes_to_faces() (in module gustaf.utils.connec)": [[9, "gustaf.utils.connec.volumes_to_faces"]], "warning() (in module gustaf.utils.log)": [[9, "gustaf.utils.log.warning"]]}})